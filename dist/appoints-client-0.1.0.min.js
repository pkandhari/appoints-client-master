var CryptoJS=CryptoJS||function(e,t){var n={},a=n.lib={},r=function(){},o=a.Base={extend:function(e){r.prototype=this;var t=new r;return e&&t.mixIn(e),t.hasOwnProperty("init")||(t.init=function(){t.$super.init.apply(this,arguments)}),t.init.prototype=t,t.$super=this,t},create:function(){var e=this.extend();return e.init.apply(e,arguments),e},init:function(){},mixIn:function(e){for(var t in e)e.hasOwnProperty(t)&&(this[t]=e[t]);e.hasOwnProperty("toString")&&(this.toString=e.toString)},clone:function(){return this.init.prototype.extend(this)}},i=a.WordArray=o.extend({init:function(e,n){e=this.words=e||[],this.sigBytes=n!=t?n:4*e.length},toString:function(e){return(e||l).stringify(this)},concat:function(e){var t=this.words,n=e.words,a=this.sigBytes;if(e=e.sigBytes,this.clamp(),a%4)for(var r=0;e>r;r++)t[a+r>>>2]|=(n[r>>>2]>>>24-8*(r%4)&255)<<24-8*((a+r)%4);else if(65535<n.length)for(r=0;e>r;r+=4)t[a+r>>>2]=n[r>>>2];else t.push.apply(t,n);return this.sigBytes+=e,this},clamp:function(){var t=this.words,n=this.sigBytes;t[n>>>2]&=4294967295<<32-8*(n%4),t.length=e.ceil(n/4)},clone:function(){var e=o.clone.call(this);return e.words=this.words.slice(0),e},random:function(t){for(var n=[],a=0;t>a;a+=4)n.push(4294967296*e.random()|0);return new i.init(n,t)}}),s=n.enc={},l=s.Hex={stringify:function(e){var t=e.words;e=e.sigBytes;for(var n=[],a=0;e>a;a++){var r=t[a>>>2]>>>24-8*(a%4)&255;n.push((r>>>4).toString(16)),n.push((15&r).toString(16))}return n.join("")},parse:function(e){for(var t=e.length,n=[],a=0;t>a;a+=2)n[a>>>3]|=parseInt(e.substr(a,2),16)<<24-4*(a%8);return new i.init(n,t/2)}},d=s.Latin1={stringify:function(e){var t=e.words;e=e.sigBytes;for(var n=[],a=0;e>a;a++)n.push(String.fromCharCode(t[a>>>2]>>>24-8*(a%4)&255));return n.join("")},parse:function(e){for(var t=e.length,n=[],a=0;t>a;a++)n[a>>>2]|=(255&e.charCodeAt(a))<<24-8*(a%4);return new i.init(n,t)}},c=s.Utf8={stringify:function(e){try{return decodeURIComponent(escape(d.stringify(e)))}catch(t){throw Error("Malformed UTF-8 data")}},parse:function(e){return d.parse(unescape(encodeURIComponent(e)))}},p=a.BufferedBlockAlgorithm=o.extend({reset:function(){this._data=new i.init,this._nDataBytes=0},_append:function(e){"string"==typeof e&&(e=c.parse(e)),this._data.concat(e),this._nDataBytes+=e.sigBytes},_process:function(t){var n=this._data,a=n.words,r=n.sigBytes,o=this.blockSize,s=r/(4*o),s=t?e.ceil(s):e.max((0|s)-this._minBufferSize,0);if(t=s*o,r=e.min(4*t,r),t){for(var l=0;t>l;l+=o)this._doProcessBlock(a,l);l=a.splice(0,t),n.sigBytes-=r}return new i.init(l,r)},clone:function(){var e=o.clone.call(this);return e._data=this._data.clone(),e},_minBufferSize:0});a.Hasher=p.extend({cfg:o.extend(),init:function(e){this.cfg=this.cfg.extend(e),this.reset()},reset:function(){p.reset.call(this),this._doReset()},update:function(e){return this._append(e),this._process(),this},finalize:function(e){return e&&this._append(e),this._doFinalize()},blockSize:16,_createHelper:function(e){return function(t,n){return new e.init(n).finalize(t)}},_createHmacHelper:function(e){return function(t,n){return new u.HMAC.init(e,n).finalize(t)}}});var u=n.algo={};return n}(Math);!function(){var e=CryptoJS,t=e.lib.WordArray;e.enc.Base64={stringify:function(e){var t=e.words,n=e.sigBytes,a=this._map;e.clamp(),e=[];for(var r=0;n>r;r+=3)for(var o=(t[r>>>2]>>>24-8*(r%4)&255)<<16|(t[r+1>>>2]>>>24-8*((r+1)%4)&255)<<8|t[r+2>>>2]>>>24-8*((r+2)%4)&255,i=0;4>i&&n>r+.75*i;i++)e.push(a.charAt(o>>>6*(3-i)&63));if(t=a.charAt(64))for(;e.length%4;)e.push(t);return e.join("")},parse:function(e){var n=e.length,a=this._map,r=a.charAt(64);r&&(r=e.indexOf(r),-1!=r&&(n=r));for(var r=[],o=0,i=0;n>i;i++)if(i%4){var s=a.indexOf(e.charAt(i-1))<<2*(i%4),l=a.indexOf(e.charAt(i))>>>6-2*(i%4);r[o>>>2]|=(s|l)<<24-8*(o%4),o++}return t.create(r,o)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}}(),function(e){function t(e,t,n,a,r,o,i){return e=e+(t&n|~t&a)+r+i,(e<<o|e>>>32-o)+t}function n(e,t,n,a,r,o,i){return e=e+(t&a|n&~a)+r+i,(e<<o|e>>>32-o)+t}function a(e,t,n,a,r,o,i){return e=e+(t^n^a)+r+i,(e<<o|e>>>32-o)+t}function r(e,t,n,a,r,o,i){return e=e+(n^(t|~a))+r+i,(e<<o|e>>>32-o)+t}for(var o=CryptoJS,i=o.lib,s=i.WordArray,l=i.Hasher,i=o.algo,d=[],c=0;64>c;c++)d[c]=4294967296*e.abs(e.sin(c+1))|0;i=i.MD5=l.extend({_doReset:function(){this._hash=new s.init([1732584193,4023233417,2562383102,271733878])},_doProcessBlock:function(e,o){for(var i=0;16>i;i++){var s=o+i,l=e[s];e[s]=16711935&(l<<8|l>>>24)|4278255360&(l<<24|l>>>8)}var i=this._hash.words,s=e[o+0],l=e[o+1],c=e[o+2],p=e[o+3],u=e[o+4],m=e[o+5],f=e[o+6],g=e[o+7],h=e[o+8],v=e[o+9],y=e[o+10],b=e[o+11],D=e[o+12],w=e[o+13],A=e[o+14],C=e[o+15],k=i[0],$=i[1],S=i[2],x=i[3],k=t(k,$,S,x,s,7,d[0]),x=t(x,k,$,S,l,12,d[1]),S=t(S,x,k,$,c,17,d[2]),$=t($,S,x,k,p,22,d[3]),k=t(k,$,S,x,u,7,d[4]),x=t(x,k,$,S,m,12,d[5]),S=t(S,x,k,$,f,17,d[6]),$=t($,S,x,k,g,22,d[7]),k=t(k,$,S,x,h,7,d[8]),x=t(x,k,$,S,v,12,d[9]),S=t(S,x,k,$,y,17,d[10]),$=t($,S,x,k,b,22,d[11]),k=t(k,$,S,x,D,7,d[12]),x=t(x,k,$,S,w,12,d[13]),S=t(S,x,k,$,A,17,d[14]),$=t($,S,x,k,C,22,d[15]),k=n(k,$,S,x,l,5,d[16]),x=n(x,k,$,S,f,9,d[17]),S=n(S,x,k,$,b,14,d[18]),$=n($,S,x,k,s,20,d[19]),k=n(k,$,S,x,m,5,d[20]),x=n(x,k,$,S,y,9,d[21]),S=n(S,x,k,$,C,14,d[22]),$=n($,S,x,k,u,20,d[23]),k=n(k,$,S,x,v,5,d[24]),x=n(x,k,$,S,A,9,d[25]),S=n(S,x,k,$,p,14,d[26]),$=n($,S,x,k,h,20,d[27]),k=n(k,$,S,x,w,5,d[28]),x=n(x,k,$,S,c,9,d[29]),S=n(S,x,k,$,g,14,d[30]),$=n($,S,x,k,D,20,d[31]),k=a(k,$,S,x,m,4,d[32]),x=a(x,k,$,S,h,11,d[33]),S=a(S,x,k,$,b,16,d[34]),$=a($,S,x,k,A,23,d[35]),k=a(k,$,S,x,l,4,d[36]),x=a(x,k,$,S,u,11,d[37]),S=a(S,x,k,$,g,16,d[38]),$=a($,S,x,k,y,23,d[39]),k=a(k,$,S,x,w,4,d[40]),x=a(x,k,$,S,s,11,d[41]),S=a(S,x,k,$,p,16,d[42]),$=a($,S,x,k,f,23,d[43]),k=a(k,$,S,x,v,4,d[44]),x=a(x,k,$,S,D,11,d[45]),S=a(S,x,k,$,C,16,d[46]),$=a($,S,x,k,c,23,d[47]),k=r(k,$,S,x,s,6,d[48]),x=r(x,k,$,S,g,10,d[49]),S=r(S,x,k,$,A,15,d[50]),$=r($,S,x,k,m,21,d[51]),k=r(k,$,S,x,D,6,d[52]),x=r(x,k,$,S,p,10,d[53]),S=r(S,x,k,$,y,15,d[54]),$=r($,S,x,k,l,21,d[55]),k=r(k,$,S,x,h,6,d[56]),x=r(x,k,$,S,C,10,d[57]),S=r(S,x,k,$,f,15,d[58]),$=r($,S,x,k,w,21,d[59]),k=r(k,$,S,x,u,6,d[60]),x=r(x,k,$,S,b,10,d[61]),S=r(S,x,k,$,c,15,d[62]),$=r($,S,x,k,v,21,d[63]);i[0]=i[0]+k|0,i[1]=i[1]+$|0,i[2]=i[2]+S|0,i[3]=i[3]+x|0},_doFinalize:function(){var t=this._data,n=t.words,a=8*this._nDataBytes,r=8*t.sigBytes;n[r>>>5]|=128<<24-r%32;var o=e.floor(a/4294967296);for(n[(r+64>>>9<<4)+15]=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),n[(r+64>>>9<<4)+14]=16711935&(a<<8|a>>>24)|4278255360&(a<<24|a>>>8),t.sigBytes=4*(n.length+1),this._process(),t=this._hash,n=t.words,a=0;4>a;a++)r=n[a],n[a]=16711935&(r<<8|r>>>24)|4278255360&(r<<24|r>>>8);return t},clone:function(){var e=l.clone.call(this);return e._hash=this._hash.clone(),e}}),o.MD5=l._createHelper(i),o.HmacMD5=l._createHmacHelper(i)}(Math),function(){var e=CryptoJS,t=e.lib,n=t.Base,a=t.WordArray,t=e.algo,r=t.EvpKDF=n.extend({cfg:n.extend({keySize:4,hasher:t.MD5,iterations:1}),init:function(e){this.cfg=this.cfg.extend(e)},compute:function(e,t){for(var n=this.cfg,r=n.hasher.create(),o=a.create(),i=o.words,s=n.keySize,n=n.iterations;i.length<s;){l&&r.update(l);var l=r.update(e).finalize(t);r.reset();for(var d=1;n>d;d++)l=r.finalize(l),r.reset();o.concat(l)}return o.sigBytes=4*s,o}});e.EvpKDF=function(e,t,n){return r.create(n).compute(e,t)}}(),CryptoJS.lib.Cipher||function(e){var t=CryptoJS,n=t.lib,a=n.Base,r=n.WordArray,o=n.BufferedBlockAlgorithm,i=t.enc.Base64,s=t.algo.EvpKDF,l=n.Cipher=o.extend({cfg:a.extend(),createEncryptor:function(e,t){return this.create(this._ENC_XFORM_MODE,e,t)},createDecryptor:function(e,t){return this.create(this._DEC_XFORM_MODE,e,t)},init:function(e,t,n){this.cfg=this.cfg.extend(n),this._xformMode=e,this._key=t,this.reset()},reset:function(){o.reset.call(this),this._doReset()},process:function(e){return this._append(e),this._process()},finalize:function(e){return e&&this._append(e),this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(e){return{encrypt:function(t,n,a){return("string"==typeof n?f:m).encrypt(e,t,n,a)},decrypt:function(t,n,a){return("string"==typeof n?f:m).decrypt(e,t,n,a)}}}});n.StreamCipher=l.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var d=t.mode={},c=function(t,n,a){var r=this._iv;r?this._iv=e:r=this._prevBlock;for(var o=0;a>o;o++)t[n+o]^=r[o]},p=(n.BlockCipherMode=a.extend({createEncryptor:function(e,t){return this.Encryptor.create(e,t)},createDecryptor:function(e,t){return this.Decryptor.create(e,t)},init:function(e,t){this._cipher=e,this._iv=t}})).extend();p.Encryptor=p.extend({processBlock:function(e,t){var n=this._cipher,a=n.blockSize;c.call(this,e,t,a),n.encryptBlock(e,t),this._prevBlock=e.slice(t,t+a)}}),p.Decryptor=p.extend({processBlock:function(e,t){var n=this._cipher,a=n.blockSize,r=e.slice(t,t+a);n.decryptBlock(e,t),c.call(this,e,t,a),this._prevBlock=r}}),d=d.CBC=p,p=(t.pad={}).Pkcs7={pad:function(e,t){for(var n=4*t,n=n-e.sigBytes%n,a=n<<24|n<<16|n<<8|n,o=[],i=0;n>i;i+=4)o.push(a);n=r.create(o,n),e.concat(n)},unpad:function(e){e.sigBytes-=255&e.words[e.sigBytes-1>>>2]}},n.BlockCipher=l.extend({cfg:l.cfg.extend({mode:d,padding:p}),reset:function(){l.reset.call(this);var e=this.cfg,t=e.iv,e=e.mode;if(this._xformMode==this._ENC_XFORM_MODE)var n=e.createEncryptor;else n=e.createDecryptor,this._minBufferSize=1;this._mode=n.call(e,this,t&&t.words)},_doProcessBlock:function(e,t){this._mode.processBlock(e,t)},_doFinalize:function(){var e=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){e.pad(this._data,this.blockSize);var t=this._process(!0)}else t=this._process(!0),e.unpad(t);return t},blockSize:4});var u=n.CipherParams=a.extend({init:function(e){this.mixIn(e)},toString:function(e){return(e||this.formatter).stringify(this)}}),d=(t.format={}).OpenSSL={stringify:function(e){var t=e.ciphertext;return e=e.salt,(e?r.create([1398893684,1701076831]).concat(e).concat(t):t).toString(i)},parse:function(e){e=i.parse(e);var t=e.words;if(1398893684==t[0]&&1701076831==t[1]){var n=r.create(t.slice(2,4));t.splice(0,4),e.sigBytes-=16}return u.create({ciphertext:e,salt:n})}},m=n.SerializableCipher=a.extend({cfg:a.extend({format:d}),encrypt:function(e,t,n,a){a=this.cfg.extend(a);var r=e.createEncryptor(n,a);return t=r.finalize(t),r=r.cfg,u.create({ciphertext:t,key:n,iv:r.iv,algorithm:e,mode:r.mode,padding:r.padding,blockSize:e.blockSize,formatter:a.format})},decrypt:function(e,t,n,a){return a=this.cfg.extend(a),t=this._parse(t,a.format),e.createDecryptor(n,a).finalize(t.ciphertext)},_parse:function(e,t){return"string"==typeof e?t.parse(e,this):e}}),t=(t.kdf={}).OpenSSL={execute:function(e,t,n,a){return a||(a=r.random(8)),e=s.create({keySize:t+n}).compute(e,a),n=r.create(e.words.slice(t),4*n),e.sigBytes=4*t,u.create({key:e,iv:n,salt:a})}},f=n.PasswordBasedCipher=m.extend({cfg:m.cfg.extend({kdf:t}),encrypt:function(e,t,n,a){return a=this.cfg.extend(a),n=a.kdf.execute(n,e.keySize,e.ivSize),a.iv=n.iv,e=m.encrypt.call(this,e,t,n.key,a),e.mixIn(n),e},decrypt:function(e,t,n,a){return a=this.cfg.extend(a),t=this._parse(t,a.format),n=a.kdf.execute(n,e.keySize,e.ivSize,t.salt),a.iv=n.iv,m.decrypt.call(this,e,t,n.key,a)}})}(),function(){for(var e=CryptoJS,t=e.lib.BlockCipher,n=e.algo,a=[],r=[],o=[],i=[],s=[],l=[],d=[],c=[],p=[],u=[],m=[],f=0;256>f;f++)m[f]=128>f?f<<1:f<<1^283;for(var g=0,h=0,f=0;256>f;f++){var v=h^h<<1^h<<2^h<<3^h<<4,v=v>>>8^255&v^99;a[g]=v,r[v]=g;var y=m[g],b=m[y],D=m[b],w=257*m[v]^16843008*v;o[g]=w<<24|w>>>8,i[g]=w<<16|w>>>16,s[g]=w<<8|w>>>24,l[g]=w,w=16843009*D^65537*b^257*y^16843008*g,d[v]=w<<24|w>>>8,c[v]=w<<16|w>>>16,p[v]=w<<8|w>>>24,u[v]=w,g?(g=y^m[m[m[D^y]]],h^=m[m[h]]):g=h=1}var A=[0,1,2,4,8,16,32,64,128,27,54],n=n.AES=t.extend({_doReset:function(){for(var e=this._key,t=e.words,n=e.sigBytes/4,e=4*((this._nRounds=n+6)+1),r=this._keySchedule=[],o=0;e>o;o++)if(n>o)r[o]=t[o];else{var i=r[o-1];o%n?n>6&&4==o%n&&(i=a[i>>>24]<<24|a[i>>>16&255]<<16|a[i>>>8&255]<<8|a[255&i]):(i=i<<8|i>>>24,i=a[i>>>24]<<24|a[i>>>16&255]<<16|a[i>>>8&255]<<8|a[255&i],i^=A[o/n|0]<<24),r[o]=r[o-n]^i}for(t=this._invKeySchedule=[],n=0;e>n;n++)o=e-n,i=n%4?r[o]:r[o-4],t[n]=4>n||4>=o?i:d[a[i>>>24]]^c[a[i>>>16&255]]^p[a[i>>>8&255]]^u[a[255&i]]},encryptBlock:function(e,t){this._doCryptBlock(e,t,this._keySchedule,o,i,s,l,a)},decryptBlock:function(e,t){var n=e[t+1];e[t+1]=e[t+3],e[t+3]=n,this._doCryptBlock(e,t,this._invKeySchedule,d,c,p,u,r),n=e[t+1],e[t+1]=e[t+3],e[t+3]=n},_doCryptBlock:function(e,t,n,a,r,o,i,s){for(var l=this._nRounds,d=e[t]^n[0],c=e[t+1]^n[1],p=e[t+2]^n[2],u=e[t+3]^n[3],m=4,f=1;l>f;f++)var g=a[d>>>24]^r[c>>>16&255]^o[p>>>8&255]^i[255&u]^n[m++],h=a[c>>>24]^r[p>>>16&255]^o[u>>>8&255]^i[255&d]^n[m++],v=a[p>>>24]^r[u>>>16&255]^o[d>>>8&255]^i[255&c]^n[m++],u=a[u>>>24]^r[d>>>16&255]^o[c>>>8&255]^i[255&p]^n[m++],d=g,c=h,p=v;g=(s[d>>>24]<<24|s[c>>>16&255]<<16|s[p>>>8&255]<<8|s[255&u])^n[m++],h=(s[c>>>24]<<24|s[p>>>16&255]<<16|s[u>>>8&255]<<8|s[255&d])^n[m++],v=(s[p>>>24]<<24|s[u>>>16&255]<<16|s[d>>>8&255]<<8|s[255&c])^n[m++],u=(s[u>>>24]<<24|s[d>>>16&255]<<16|s[c>>>8&255]<<8|s[255&p])^n[m++],e[t]=g,e[t+1]=h,e[t+2]=v,e[t+3]=u},keySize:8});e.AES=t._createHelper(n)}(),angular.module("mdo-angular-cryptography",[]).provider("$crypto",function(){var e;this.setCryptographyKey=function(t){e=t},this.$get=[function(){return{getCryptoKey:function(){return e},encrypt:function(t,n){return void 0===n&&(n=e),CryptoJS.AES.encrypt(t,n).toString()},decrypt:function(t,n){return void 0===n&&(n=e),CryptoJS.AES.decrypt(t,n).toString(CryptoJS.enc.Utf8)}}}]}),angular.module("appoints.appointment",["ngRoute"]).controller("AppointmentCtrl",["$scope","_","flash","moment","config","$location","$routeParams","$http",function(e,t,n,a,r,o,i,s){e.doctor={},e.isreadonly="true"===i.isreadonly,$("#doctor").attr("disabled",e.isreadonly),$("#duration").attr("disabled",e.isreadonly),e.getEndTime=function(e){return a(e.dateAndTime).add(e.duration,"minutes").format("H:mm")},e.updateAppointment=function(){e.editAppointment.doctorId=e.doctor.DoctorId;var t=r.apiEndpoint+"/appointments",a={method:"PUT",url:t,data:e.editAppointment};return s(a).then(function(){n.add("Appointment updated successfully","info"),o.url("/dashboard")},function(e){n.add(e.data.ExceptionMessage,"error")})},e.getAppointment=function(){e.appointmentId=1;var t={method:"GET",url:r.apiEndpoint+"/appointments/"+i.appointmentid};return s(t).then(function(t){e.editAppointment=t.data,e.editAppointment.DateAndTime=a(e.editAppointment.DateAndTime),e.doctor.DoctorId=e.editAppointment.DoctorId},function(e){n.add(e.data.ExceptionMessage,"error")})},e.getDoctors=function(){var t={method:"GET",url:r.apiEndpoint+"/doctors"};return s(t).then(function(t){e.doctors=t.data},function(e){n.add(e.data.ExceptionMessage,"error")})},e.goToDashboard=function(){o.url("/dashboard")},e.getAppointment(),e.getDoctors()}]),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("appointments/appointment.html",'<div ng-app="appoints" class="row"><div style="font-size: larger;padding-left: 1%"><a class="dropdown-toggle" role="button" title="Go to Dashboard" id="patient{{$index}}" href="" ng-click="goToDashboard()"><span class="glyphicon glyphicon-circle-arrow-left"></span>Go to dashboard</a></div><div class="col-md-6"><h2 style="text-align: center"><b>Appointment Details</b></h2><form role="form" name="form"><div class="form-group"><label for="doctor">Doctor</label><span class="mandatoryField" style="color: red">*</span><select class="form-control" id="doctor" ng-readonly="{{isreadonly}}" ng-options="doctor as doctor.UserDetails.FirstName for doctor in doctors track by doctor.DoctorId" ng-model="doctor" ng-change="optionChange()" required><option value="" disabled selected>Select your option</option></select></div><div class="form-group"><label for="title">Title</label><span class="mandatoryField" style="color: red">*</span> <input class="form-control" id="title" placeholder="Enter appointment description" ng-model="editAppointment.Title" ng-readonly="{{isreadonly}}" required></div><div class="form-group"><label for="dateAndTime">Appointment date and time</label><span class="mandatoryField" style="color: red">*</span><div class="dropdown"><a class="dropdown-toggle" ng-class="{{isreadonly}} ? \'disable-anchor\' : \'\'" id="dropdown1" role="button" data-toggle="dropdown"><div class="input-group"><input required data-date-time-input="MM/DD/YYYY HH:mm:ss" class="form-control" data-ng-model="editAppointment.DateAndTime" ng-readonly="{{isreadonly}}" required> <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span></div></a><ul class="dropdown-menu" role="menu" aria-labelledby="dLabel"><datetimepicker data-ng-model="editAppointment.DateAndTime" ng-readonly="{{isreadonly}}" data-datetimepicker-config="{ dropdownSelector: \'#dropdown1\', startView: \'hour\', minuteStep: 15 }"></datetimepicker></ul></div></div><div class="form-group"><label for="duration">Duration</label><span class="mandatoryField" style="color: red">*</span><select class="form-control" id="duration" ng-model="editAppointment.Duration" ng-readonly="{{isreadonly}}" required><option value="15">15 minutes</option><option value="30">30 minutes</option><option value="60">60 minutes</option><option value="90">90 minutes</option></select></div><div class="form-group"><label for="remarks">Remarks</label><textarea id="remarks" class="form-control" rows="4" placeholder="Enter additional remarks" ng-model="editAppointment.Remarks"></textarea></div><button type="submit" class="btn btn-default" ng-click="updateAppointment()" ng-disabled="form.$invalid">Submit</button></form></div></div>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("appointments/CreateAppointment.html",'<div id="example" ng-app="appoints"><div class="col-md-4"><h2 style="text-align: center"><b>Create new appointment</b></h2><form role="form" name="form"><div class="form-group"><label for="doctor">Doctor</label><span class="mandatoryField" style="color: red">*</span><select class="form-control" id="doctor" ng-options="doctor as doctor.UserDetails.FirstName for doctor in doctors track by doctor.DoctorId" ng-model="doctor" ng-change="optionChange()" required><option value="" disabled selected>Select your option</option></select></div><div class="form-group"><label for="title">Title</label><span class="mandatoryField" style="color: red">*</span> <input class="form-control" id="title" placeholder="Enter appointment description" ng-model="newAppointment.title" required></div><div class="form-group"><label for="dateAndTime">Appointment date and time</label><span class="mandatoryField" style="color: red">*</span><div class="dropdown"><a class="dropdown-toggle" id="dropdown1" role="button" data-toggle="dropdown"><div class="input-group"><input required data-date-time-input="MM/DD/YYYY HH:mm:ss" class="form-control" data-ng-model="newAppointment.dateAndTime" required> <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span></div></a><ul class="dropdown-menu" role="menu" aria-labelledby="dLabel"><datetimepicker data-ng-model="newAppointment.dateAndTime" data-datetimepicker-config="{ dropdownSelector: \'#dropdown1\', startView: \'hour\', minuteStep: 15 }"></datetimepicker></ul></div></div><div class="form-group"><label for="duration">Duration</label><span class="mandatoryField" style="color: red">*</span><select class="form-control" id="duration" ng-model="newAppointment.duration" required><option value="15">15 minutes</option><option value="30">30 minutes</option><option value="60">60 minutes</option><option value="90">90 minutes</option></select></div><div class="form-group"><label for="remarks">Remarks</label><textarea id="remarks" class="form-control" rows="4" placeholder="Enter additional remarks" ng-model="newAppointment.remarks"> </textarea></div><button type="submit" class="btn btn-default" ng-click="createAppointment()" ng-disabled="form.$invalid">Create</button></form></div><div class="col-md-8"><h2 style="text-align: center"><b>Doctor\'s Appointment Calendar</b></h2><div class="btn-toolbar"><div class="btn-group"><button class="btn btn-success" ng-click="changeView(\'agendaDay\', \'myCalendar\')">AgendaDay</button> <button class="btn btn-success" ng-click="changeView(\'agendaWeek\', \'myCalendar\')">AgendaWeek</button> <button class="btn btn-success" ng-click="changeView(\'month\', \'myCalendar\')">Month</button></div></div><div class="calendar" ng-model="eventSources" calendar="myCalendar" ui-calendar="uiConfig.calendar"></div></div></div>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("appointments/dashboard.html",'<div ng-app="appoints"><h1 style="text-align: center"><b>Welcome! {{user.displayName}}</b></h1><div class="col-md-4" ng-if="user.isAdmin"><h2><b>List of Doctors</b></h2><p ng-if="doctors.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="doctor in doctors"><h4 class="list-group-item-heading"><a href="" ng-click="openDoctorDetails(doctor)"><b>{{doctor.UserDetails.FirstName}} {{doctor.UserDetails.LastName}}</b></a></h4><h5 class="list-group-item-heading">Graduated from: {{doctor.GraduatedFrom}}</h5><h5 class="list-group-item-heading">Practice: {{doctor.FieldOfPractice}}</h5><p class="list-group-item-text">{{doctor.CurrentWorkingStatus}}</p></li></ul></div><div class="col-md-4" ng-if="user.isAdmin"><h2><b>List of Patients</b></h2><p ng-if="patients.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="patient in patients"><h4 class="list-group-item-heading"><a href="" ng-click="openPatientDetails(patient)"><b>{{patient.UserDetails.FirstName}} {{patient.UserDetails.LastName}}</b></a></h4><h5 class="list-group-item-heading">Health Issues: {{patient.HealthIssues}}</h5><h5 class="list-group-item-heading">Allergies: {{patient.Allergies}}</h5><p class="list-group-item-text">{{patient.CurrentWorkingStatus}}</p></li></ul></div><div class="col-md-4" ng-if="user.isAdmin"><h2><b>Upcoming Appointments</b></h2><p ng-if="upcomingAdminAppointments.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="appointment in upcomingAdminAppointments"><h4 class="list-group-item-heading"><a href="" ng-click="openAppointment(appointment)"><b>{{appointment.Title}}</b></a></h4><h5 class="list-group-item-heading">{{appointment.DateAndTime | date:\'d MMM, y H:mm\'}}, duration: {{appointment.Duration}} mins</h5><h5 class="list-group-item-heading">Patient: <a href="" ng-click="openAppointmentPatient(appointment)">{{appointment.PatientName}}</a></h5><h5 class="list-group-item-heading">Doctor: <a href="" ng-click="openAppointmentDoctor(appointment)">{{appointment.DoctorName}}</a></h5><h5 class="list-group-item-heading">Remarks: {{appointment.Remarks}}</h5></li></ul><h2><b>Past Appointments</b></h2><p ng-if="pastAdminAppointments.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="appointment in pastAdminAppointments"><h4 class="list-group-item-heading"><a href="" ng-click="openAppointment(appointment)"><b>{{appointment.Title}}</b></a></h4><h5 class="list-group-item-heading">{{appointment.DateAndTime | date:\'d MMM, y H:mm\'}}, duration: {{appointment.Duration}} mins</h5><h5 class="list-group-item-heading">Patient: <a href="" ng-click="openAppointmentPatient(appointment)">{{appointment.PatientName}}</a></h5><h5 class="list-group-item-heading">Doctor: <a href="" ng-click="openAppointmentDoctor(appointment)">{{appointment.DoctorName}}</a></h5><h5 class="list-group-item-heading">Remarks: {{appointment.Remarks}}</h5></li></ul></div><div class="col-md-4" ng-if="!user.isAdmin && user.isDoctor"><h2><b>Upcoming Appointments</b></h2><p ng-if="upcomingDoctorAppointments.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="appointment in upcomingDoctorAppointments"><h4 class="list-group-item-heading"><a href="" ng-click="openAppointment(appointment)"><b>{{appointment.Title}}</b></a></h4><h5 class="list-group-item-heading">{{appointment.DateAndTime | date:\'d MMM, y H:mm\'}}, duration: {{appointment.Duration}} mins</h5><h5 class="list-group-item-heading">Patient: <a href="" ng-click="openAppointmentPatient(appointment)">{{appointment.PatientName}}</a></h5><h5 class="list-group-item-heading">Remarks: {{appointment.Remarks}}</h5></li></ul><h2><b>Past Appointments</b></h2><p ng-if="pastDoctorAppointments.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="appointment in pastDoctorAppointments"><h4 class="list-group-item-heading"><a href="" ng-click="openAppointment(appointment)"><b>{{appointment.Title}}</b></a></h4><h5 class="list-group-item-heading">{{appointment.DateAndTime | date:\'d MMM, y H:mm\'}}, duration: {{appointment.Duration}} mins</h5><h5 class="list-group-item-heading">Patient: <a href="" ng-click="openAppointmentPatient(appointment)">{{appointment.PatientName}}</a></h5><h5 class="list-group-item-heading">Remarks: {{appointment.Remarks}}</h5></li></ul></div><div class="col-md-8" ng-if="!user.isAdmin && user.isDoctor"><h2 style="text-align: center"><b>Doctor\'s Appointment Calendar</b></h2><div class="btn-toolbar"><div class="btn-group"><button class="btn btn-success" ng-click="changeView(\'agendaDay\', \'myCalendar\')">AgendaDay</button> <button class="btn btn-success" ng-click="changeView(\'agendaWeek\', \'myCalendar\')">AgendaWeek</button> <button class="btn btn-success" ng-click="changeView(\'month\', \'myCalendar\')">Month</button></div></div><div class="calendar" ng-model="eventSourceDoctor" calendar="myCalendar" ui-calendar="uiConfig.calendar"></div></div><div class="col-md-4" ng-if="!user.isAdmin && !user.isDoctor"><h2><b>Upcoming appointments</b></h2><p ng-if="upcomingPatientAppointments.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="appointment in upcomingPatientAppointments"><div><a href="" class="pull-right" ng-click="deleteAppointment(appointment)" title="Delete Appointment"><span class="glyphicon glyphicon-remove"></span></a></div><h4 class="list-group-item-heading"><a href="" ng-click="openAppointment(appointment)"><b>{{appointment.Title}}</b></a></h4><h5 class="list-group-item-heading">{{appointment.DateAndTime | date:\'d MMM, y H:mm\'}}, duration: {{appointment.Duration}} mins</h5><h5 class="list-group-item-heading">Doctor: <a href="" ng-click="openAppointmentDoctor(appointment)">{{appointment.DoctorName}}</a></h5><h5 class="list-group-item-heading">Remarks: {{appointment.Remarks}}</h5></li></ul><h2><b>Past appointments</b></h2><p ng-if="pastPatientAppointments.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="appointment in pastPatientAppointments"><h4 class="list-group-item-heading"><a href="" ng-click="openAppointment(appointment)"><b>{{appointment.Title}}</b></a></h4><h5 class="list-group-item-heading">{{appointment.DateAndTime | date:\'d MMM, y H:mm\'}}, duration: {{appointment.Duration}} mins</h5><h5 class="list-group-item-heading">Doctor: <a href="" ng-click="openAppointmentDoctor(appointment)">{{appointment.DoctorName}}</a></h5><h5 class="list-group-item-heading">Remarks: {{appointment.Remarks}}</h5></li></ul></div><div class="col-md-8" ng-if="!user.isAdmin && !user.isDoctor"><h2 style="text-align: center"><b>Patient\'s Appointment Calendar</b></h2><div class="btn-toolbar"><div class="btn-group"><button class="btn btn-success" ng-click="changeView(\'agendaDay\', \'myCalendar\')">AgendaDay</button> <button class="btn btn-success" ng-click="changeView(\'agendaWeek\', \'myCalendar\')">AgendaWeek</button> <button class="btn btn-success" ng-click="changeView(\'month\', \'myCalendar\')">Month</button></div></div><div class="calendar" ng-model="eventSourcePatient" calendar="myCalendar" ui-calendar="uiConfig.calendar"></div></div></div>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("appointments/profile.html",'<div class="" ng-app="appoints" ng-controller="ProfileCtrl"><div style="font-size: larger;padding-left: 5%" ng-if="isreadonly"><a class="dropdown-toggle" role="button" title="Go to Dashboard" id="patient{{$index}}" href="" ng-click="goToDashboard()"><span class="glyphicon glyphicon-circle-arrow-left"></span>Go to dashboard</a></div><h2 style="text-align: center">Details of: <b>{{profileData.UserDetails.FirstName}} {{profileData.UserDetails.LastName}}</b></h2><form name="form" ng-submit="register()" role="form"><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-12" ng-class="{ \'has-error\': form.email.$dirty && (form.email.$error.required || form.email.$error.email) }"><label for="email">Email</label><span class="mandatoryField" style="color: red">*</span> <input type="email" name="email" id="email" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.Email" placeholder="Email" required> <span ng-show="form.email.$dirty && form.email.$error.email" class="help-block">This email format is invalid!</span> <span ng-show="form.email.$dirty && form.email.$error.required" class="help-block">Email is required</span></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6" ng-class="{ \'has-error\': form.firstName.$dirty && form.firstName.$error.required }"><label for="firstName">First name</label><span class="mandatoryField" style="color: red">*</span> <input name="firstName" id="firstName" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.FirstName" placeholder="First name" required> <span ng-show="form.firstName.$dirty && form.firstName.$error.required" class="help-block">First name is required</span></div><div class="form-group col-md-6" ng-class="{ \'has-error\': form.lastName.$dirty && form.lastName.$error.required }"><label for="lastName">Last name</label><span class="mandatoryField" style="color: red">*</span> <input name="lastName" id="lastName" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.LastName" placeholder="Last name" required> <span ng-show="form.lastName.$dirty && form.lastName.$error.required" class="help-block">Last name is required</span></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6"><label for="maritalStatus">Marital Status</label><select class="form-control" id="maritalStatus" ng-options="maritalStatus as maritalStatus.Description for maritalStatus in maritalStatusData track by maritalStatus.Id" ng-model="maritalStatus" ng-readonly="{{isreadonly}}"><option value="" disabled selected>Select your option</option></select></div><div class="form-group col-md-6"><label for="gender">Gender</label><select class="form-control" id="gender" ng-options="gender as gender.Description for gender in gendersData track by gender.Id" ng-model="gender" ng-readonly="{{isreadonly}}"><option value="" disabled selected>Select your option</option></select></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6"><label for="address">Address</label><input name="address" id="address" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.Address" placeholder="Address"></div><div class="form-group col-md-6"><label for="postalCode">Postal Code</label><input name="postalCode" id="postalCode" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.PostalCode" placeholder="Postal Code"></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6"><label for="city">City</label><input name="city" id="city" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.City" placeholder="City"></div><div class="form-group col-md-6"><label for="province">Province</label><input name="province" id="province" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.Province" placeholder="Province"></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6"><label for="country">Country</label><input name="country" id="country" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.Country" placeholder="Country"></div><div class="form-group col-md-6" ng-class="{ \'has-error\': form.contact.$dirty && form.contact.$invalid }"><label for="contact">Contact</label><input name="contact" id="contact" class="form-control" ng-readonly="{{isreadonly}}" ng-pattern="/\\d{3}-\\d{3}-\\d{4}/" ng-model="profileData.UserDetails.Contact" placeholder="Contact"> <span ng-show="form.contact.$dirty && form.contact.$invalid" class="help-block">This contact format is invalid! Valid format is XXX-XXX-XXXX</span></div></div><h2 style="text-align: center" ng-if="!profileData.UserDetails.IsAdmin && profileData.UserDetails.IsDoctor"><b>Doctor\'s Details</b></h2><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%" ng-if="!profileData.UserDetails.IsAdmin && profileData.UserDetails.IsDoctor"><div class="form-group col-md-6"><label for="availability">Availability</label><input name="availability" id="availability" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.Availability" placeholder="Availability"></div><div class="form-group col-md-6"><label for="currentWorkingStatus">Current Working Status</label><input name="currentWorkingStatus" id="currentWorkingStatus" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.CurrentWorkingStatus" placeholder="Current Working Status"></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%" ng-if="!profileData.UserDetails.IsAdmin && profileData.UserDetails.IsDoctor"><div class="form-group col-md-6"><label for="department">Department</label><input name="department" id="department" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.Department" placeholder="Department"></div><div class="form-group col-md-6"><label for="fieldOfPractice">Field of Practice</label><input name="fieldOfPractice" id="fieldOfPractice" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.FieldOfPractice" placeholder="Field of Practice"></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%" ng-if="!profileData.UserDetails.IsAdmin && profileData.UserDetails.IsDoctor"><div class="form-group col-md-6"><label for="degree">Degree</label><input name="degree" id="degree" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.Degree" placeholder="Degree"></div><div class="form-group col-md-6"><label for="graduatedFrom">Graduated From</label><input name="graduatedFrom" id="graduatedFrom" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.GraduatedFrom" placeholder="Graduated From"></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%" ng-if="!profileData.UserDetails.IsAdmin && profileData.UserDetails.IsDoctor"><div class="form-group col-md-6"><label for="dateOfJoining">Date of Joining</label><input type="date" name="dateOfJoining" id="dateOfJoining" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.DOJ" placeholder="yyyy-MM-dd"></div><div class="form-group col-md-6"><label for="yearsOfExp">Years of Experience</label><input name="yearsOfExp" id="yearsOfExp" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.YearsOfExp" placeholder="Years of Experience"></div></div><h2 style="text-align: center" ng-if="!profileData.UserDetails.IsAdmin && !profileData.UserDetails.IsDoctor"><b>Patient\'s Details</b></h2><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%" ng-if="(!profileData.UserDetails.IsAdmin && !profileData.UserDetails.IsDoctor)"><div class="form-group col-md-6"><label for="allergies">Allergies</label><input name="allergies" id="allergies" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.Allergies" placeholder="Allergies"></div><div class="form-group col-md-6"><label for="healthIssues">Health Issues</label><input name="healthIssues" id="healthIssues" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.HealthIssues" placeholder="Health Issues"></div></div><div class="form-group col-md-12" ng-if="!isreadonly" style="padding-left: 15%;padding-right: 15%"><div class="form-actions col-md-6"><button type="submit" ng-click="saveProfileData()" ng-disabled="form.$invalid" class="btn btn-primary">Submit</button> <a href="#/dashboard" class="btn btn-link">Cancel</a></div></div></form></div>')
}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("auth/logindetails.html",'<div ng-app="appoints" class="col-md-6 col-md-offset-3"><h1 style="text-align: center;padding-bottom: 25px"><b>Update Login Details</b></h1><form name="form" ng-submit="vm.login()" role="form"><div class="form-group" ng-class="{ \'has-error\': form.oldPassword.$dirty && form.oldPassword.$error.required }"><label for="oldPassword">Old Password</label><span class="mandatoryField" style="color: red">*</span> <input type="password" name="oldPassword" id="oldPassword" class="form-control" ng-model="oldPassword" placeholder="Old Password" required> <span ng-show="form.oldPassword.$dirty && form.oldPassword.$error.required" class="help-block">Old password is required</span></div><div class="form-group" ng-class="{ \'has-error\': form.newPassword.$dirty && form.newPassword.$error.required }"><label for="newPassword">New Password</label><span class="mandatoryField" style="color: red">*</span> <input type="password" name="newPassword" id="newPassword" class="form-control" ng-model="newPassword" placeholder="New Password" required> <span ng-show="form.newPassword.$dirty && form.newPassword.$error.required" class="help-block">New password is required</span></div><div class="form-actions"><button type="submit" ng-click="updatelogindetails()" ng-disabled="form.$invalid || vm.dataLoading" class="btn btn-primary">Submit</button> <a href="#/dashboard" class="btn btn-link">Cancel</a></div></form></div>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("auth/usersignin.html",'<div ng-app="appoints" class="col-md-6 col-md-offset-3"><h1 style="text-align: center;padding-bottom: 25px">Sign In to <b>DOC Connect</b></h1><form name="form" ng-submit="vm.login()" role="form"><div class="form-group" ng-class="{ \'has-error\': form.username.$dirty && form.username.$error.required }"><label for="username">Username</label><span class="mandatoryField" style="color: red">*</span> <input name="username" id="username" class="form-control" ng-model="username" placeholder="Username" required> <span ng-show="form.username.$dirty && form.username.$error.required" class="help-block">Username is required</span></div><label for="password">Password</label><span class="mandatoryField" style="color: red">*</span><div class="form-group input-group" ng-class="{ \'has-error\': form.password.$dirty && form.password.$error.required }"><input type="{{ showPassword ? \'text\' : \'password\' }}" name="password" id="password" class="form-control" ng-model="password" placeholder="Password" required> <span class="input-group-addon" ng-click="toggleShowPassword()" ng-class="{\'glyphicon glyphicon-eye-close form-control-feedback\': showPassword,\'glyphicon glyphicon-eye-open form-control-feedback\': !showPassword}" style="cursor: pointer; pointer-events: all"></span></div><div ng-class="{ \'has-error\': form.password.$dirty && form.password.$error.required }"><span ng-show="form.password.$dirty && form.password.$error.required" class="help-block">Password is required</span></div><div class="form-actions"><button type="submit" ng-click="login()" ng-disabled="form.$invalid || vm.dataLoading" class="btn btn-primary">Sign In</button> <a href="#/usersignup" class="btn btn-link">Sign Up</a></div></form></div>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("auth/usersignup.html",'<div class="" ng-app="appoints"><h1 style="text-align: center;padding-bottom: 25px">Sign Up your practice to <b>DOC Connect</b></h1><form name="form" ng-submit="vm.register()" role="form"><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-12" ng-class="{ \'has-error\': form.email.$dirty && (form.email.$error.required || form.email.$error.email) }"><label for="username">Email</label><span class="mandatoryField" style="color: red">*</span> <input type="email" name="email" id="email" class="form-control" ng-model="signupObj.email" placeholder="Email" required> <span ng-show="form.email.$dirty && form.email.$error.email" class="help-block">This email format is invalid!</span> <span ng-show="form.email.$dirty && form.email.$error.required" class="help-block">Email is required</span></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6" ng-class="{ \'has-error\': form.firstName.$dirty && form.firstName.$error.required }"><label for="username">First name</label><span class="mandatoryField" style="color: red">*</span> <input name="firstName" id="firstName" class="form-control" ng-model="signupObj.firstName" placeholder="First name" required> <span ng-show="form.firstName.$dirty && form.firstName.$error.required" class="help-block">First name is required</span></div><div class="form-group col-md-6" ng-class="{ \'has-error\': form.lastName.$dirty && form.lastName.$error.required }"><label for="username">Last name</label><span class="mandatoryField" style="color: red">*</span> <input name="lastName" id="lastName" class="form-control" ng-model="signupObj.lastName" placeholder="Last name" required> <span ng-show="form.lastName.$dirty && form.lastName.$error.required" class="help-block">Last name is required</span></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6" ng-class="{ \'has-error\': form.username.$dirty && form.username.$error.required }"><label for="username">Username</label><span class="mandatoryField" style="color: red">*</span> <input name="username" id="username" class="form-control" ng-model="signupObj.username" placeholder="Username" required> <span ng-show="form.username.$dirty && form.username.$error.required" class="help-block">Username is required</span></div><div class="form-group col-md-6" ng-class="{ \'has-error\': form.password.$dirty && form.password.$error.required }"><label for="password">Password</label><span class="mandatoryField" style="color: red">*</span> <input type="password" name="password" id="password" class="form-control" ng-model="signupObj.password" placeholder="Password" required> <span ng-show="form.password.$dirty && form.password.$error.required" class="help-block">Password is required</span></div></div><div class="form-check col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6"><label for="isPractitioner">I am a practitioner</label><input type="checkbox" name="isPractitioner" id="isPractitioner" ng-model="signupObj.isPractitioner"></div></div><div class="form-group col-md-12" ng-show="signupObj.isPractitioner" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6"><label for="specialty">Your specialty</label><input name="specialty" id="specialty" class="form-control" ng-model="signupObj.specialty" placeholder="Your specialty"> <small class="form-text text-muted"><i>"Dentistry", "Chiropractics"</i>, etc.</small></div><div class="form-group col-md-6"><label for="credentials">Credentials</label><input name="credentials" id="credentials" class="form-control" ng-model="signupObj.credentials" placeholder="Credentials"> <small class="form-text text-muted"><i>MD, BDS, DPM</i>, etc.</small></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-actions col-md-6"><button type="submit" ng-click="signup()" ng-disabled="form.$invalid || vm.dataLoading" class="btn btn-primary">Sign Up</button> <a href="#/usersignin" class="btn btn-link">Cancel</a></div></div></form></div>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("home/home.html",'<div class="row" style="padding-top: 20px"><div class="col-md-12" style="font-family: cursive;font-size: 30px;text-align: center;padding-bottom: 20px;text-decoration-line: underline">A Good and healthy body is the reason behind a healthy mind.</div><div class="col-md-3" style="border-right: 1px solid white"><img src="assets/images/image2.png" style="height: 310px;width: 260px"></div><div class="col-md-4"><h2 style="text-align: center;padding-bottom: 10px">Sign in to manage my account.</h2><div class="col-md-12"><form name="form" ng-submit="vm.login()" role="form"><div class="form-group" ng-class="{ \'has-error\': form.username.$dirty && form.username.$error.required }"><label for="username">Username</label><span class="mandatoryField" style="color: red">*</span> <input name="username" id="username" class="form-control" ng-model="username" placeholder="Username" required> <span ng-show="form.username.$dirty && form.username.$error.required" class="help-block">Username is required</span></div><label for="password">Password</label><span class="mandatoryField" style="color: red">*</span><div class="form-group input-group" ng-class="{ \'has-error\': form.password.$dirty && form.password.$error.required }"><input type="{{ showPassword ? \'text\' : \'password\' }}" name="password" id="password" class="form-control" ng-model="password" placeholder="Password" required> <span class="input-group-addon" ng-click="toggleShowPassword()" ng-class="{\'glyphicon glyphicon-eye-close form-control-feedback\': showPassword,\'glyphicon glyphicon-eye-open form-control-feedback\': !showPassword}" style="cursor: pointer; pointer-events: all"></span></div><div ng-class="{ \'has-error\': form.password.$dirty && form.password.$error.required }"><span ng-show="form.password.$dirty && form.password.$error.required" class="help-block">Password is required</span></div><div class="form-actions"><button type="submit" class="block" ng-click="login()" ng-disabled="form.$invalid || vm.dataLoading" class="btn btn-primary">Sign In</button> </div><div><strong><p>Don\'t have an account? <a href="#/usersignup" class="btn btn-link">Register Now</a></p></strong></div></form></div></div><div class="col-md-5" style="border-left: 1px solid white"><img src="assets/images/image3.png" style="height: 310px;width: 470px"></div></div><footer class="pull-right">DOC Connect {{version}} - &copy; Pritpal Singh Kandhari, 2022</footer>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("shared/flash.html",'<section ng-controller="FlashCtrl" class="flashcontainer"><div ng-repeat="flashMessage in flashMessages" ng-class="getMessageClass(flashMessage.level)"><button type="button" class="close" data-dismiss="alert" ng-click="dismiss(flashMessage)">&times;</button> {{flashMessage.message}}<ul ng-if="flashMessage.details.errors"><li ng-repeat="error in flashMessage.details.errors">{{error.message}}</li></ul></div></section>')}])}(),angular.module("appoints.signup",["ngRoute"]).controller("UserSignupCtrl",["$scope","usersession","$location",function(e,t,n){e.signupObj={email:"",firstName:"",lastName:"",username:"",password:"",isPractitioner:!1,specialty:"",credentials:""},e.signup=function(){e.signupObj.isPractitioner&&(e.signupObj.firstName="Dr. "+e.signupObj.firstName),t.signup(e.signupObj).then(function(e){var t=e.data;t.UserId>0&&n.url("/usersignin")})}}]),angular.module("ui.calendar",[]).constant("uiCalendarConfig",{calendars:{}}).controller("uiCalendarCtrl",["$scope","$locale","moment",function(e,t,n){var a=e.eventSources,r=e.calendarWatchEvent?e.calendarWatchEvent:angular.noop,o=function(t){return function(){if(e.$root.$$phase)return t.apply(this,arguments);var n=arguments,a=this;return e.$root.$apply(function(){return t.apply(a,n)})}},i=1;this.eventFingerprint=function(e){e._id||(e._id=i++);var t=r({event:e})||"",a=n.isMoment(e.start)?e.start.unix():e.start?n(e.start).unix():"",o=n.isMoment(e.end)?e.end.unix():e.end?n(e.end).unix():"";return[e._id,e.id||"",e.title||"",e.url||"",a,o,e.allDay||"",e.className||"",t].join("")};var s=1,l=1;this.sourceFingerprint=function(e){var t=""+(e.__id||(e.__id=s++)),n=angular.isObject(e)&&e.events;return n&&(t=t+"-"+(n.__id||(n.__id=l++))),t},this.allEvents=function(){return Array.prototype.concat.apply([],(a||[]).reduce(function(e,t){if(angular.isArray(t))e.push(t);else if(angular.isObject(t)&&angular.isArray(t.events)){var n=Object.keys(t).filter(function(e){return"_id"!==e&&"events"!==e});t.events.forEach(function(e){angular.extend(e,n)}),e.push(t.events)}return e},[]))},this.changeWatcher=function(e,t){var n,a=function(){return((angular.isFunction(e)?e():e)||[]).reduce(function(e,n){var a=t(n);return o[a]=n,e.push(a),e},[])},r=function(e,t){var n=(t||[]).reduce(function(e,t){return e[t]=!0,e},Object.create(null));return(e||[]).filter(function(e){return!n[e]})},o={},i=function(e,a){var i,s,l={},d=r(a,e);for(i=0;i<d.length;i++){var c=d[i],p=o[c];delete o[c];var u=t(p);u===c?n.onRemoved(p):(l[u]=c,n.onChanged(p))}var m=r(e,a);for(i=0;i<m.length;i++)s=m[i],l[s]||n.onAdded(o[s])};return n={subscribe:function(e,t){e.$watch(a,function(e,n){var a=!(t&&t(e,n)===!1);a&&i(e,n)},!0)},onAdded:angular.noop,onChanged:angular.noop,onRemoved:angular.noop}},this.getFullCalendarConfig=function(e,t){var n={};return angular.extend(n,t),angular.extend(n,e),angular.forEach(n,function(e,t){"function"==typeof e&&(n[t]=o(n[t]))}),n},this.getLocaleConfig=function(e){if(!e.lang&&!e.locale||e.useNgLocale){var n=function(e){return(Object.keys(e)||[]).reduce(function(t,n){return t.push(e[n]),t},[])},a=t.DATETIME_FORMATS;return{monthNames:n(a.MONTH),monthNamesShort:n(a.SHORTMONTH),dayNames:n(a.DAY),dayNamesShort:n(a.SHORTDAY)}}return{}}}]).directive("uiCalendar",["uiCalendarConfig",function(e){return{restrict:"A",scope:{eventSources:"=ngModel",calendarWatchEvent:"&"},controller:"uiCalendarCtrl",link:function(t,n,a,r){function o(){var n=a.uiCalendar?t.$parent.$eval(a.uiCalendar):{},o=r.getFullCalendarConfig(n,e),i=r.getLocaleConfig(o);angular.extend(i,o),p={eventSources:s},angular.extend(p,i),p.calendars=null;var l={};for(var d in p)"eventSources"!==d&&(l[d]=p[d]);return JSON.stringify(l)}var i,s=t.eventSources,l=!1,d=r.changeWatcher(s,r.sourceFingerprint),c=r.changeWatcher(r.allEvents,r.eventFingerprint),p=null;t.destroyCalendar=function(){i&&i.fullCalendar&&i.fullCalendar("destroy"),i=a.calendar?e.calendars[a.calendar]=angular.element(n).html(""):angular.element(n).html("")},t.initCalendar=function(){i||(i=$(n).html("")),i.fullCalendar(p),a.calendar&&(e.calendars[a.calendar]=i)},t.$on("$destroy",function(){t.destroyCalendar()}),d.onAdded=function(t){i&&i.fullCalendar&&(i.fullCalendar(p),a.calendar&&(e.calendars[a.calendar]=i),i.fullCalendar("addEventSource",t),l=!0)},d.onRemoved=function(e){i&&i.fullCalendar&&(i.fullCalendar("removeEventSource",e),l=!0)},d.onChanged=function(){i&&i.fullCalendar&&(i.fullCalendar("refetchEvents"),l=!0)},c.onAdded=function(e){i&&i.fullCalendar&&i.fullCalendar("renderEvent",e,!!e.stick)},c.onRemoved=function(e){i&&i.fullCalendar&&i.fullCalendar("removeEvents",e._id)},c.onChanged=function(e){if(i&&i.fullCalendar)for(var t=i.fullCalendar("clientEvents",e._id),n=0;n<t.length;n++){var a=t[n];a=angular.extend(a,e),i.fullCalendar("updateEvent",a)}},d.subscribe(t),c.subscribe(t,function(){return l===!0?(l=!1,!1):void 0}),t.$watch(o,function(e,n){e!==n?(t.destroyCalendar(),t.initCalendar()):e&&angular.isUndefined(i)&&t.initCalendar()})}}}]),angular.module("appoints.config",[]).constant("config",{apiEndpoint:"http://3.84.17.160/DocConnectAPI"}).constant("appName","appoints-client").constant("appVersion","0.1.0").constant("appDescription","Doctor appointment scheduler app"),angular.module("appoints.directives",[]),angular.module("appoints.flash",[]).factory("flash",["$rootScope","$timeout",function(e,t){function n(n,a,r){a=a||"info";var i={message:n,level:a,details:r};s.push(i),t(function(){o(i)},5e3),e.$broadcast("event:flash.add",i)}function a(e){e.message?n(e.message,"error",e):n(e,"error")}function r(){return s}function o(t){var n=s.indexOf(t);s.splice(n,1),e.$broadcast("event:flash.remove",t)}function i(){s=[],e.$broadcast("event:flash.clear",!0)}var s=[];return{add:n,addError:a,all:r,remove:o,clear:i}}]).controller("FlashCtrl",["$scope","flash",function(e,t){e.flashMessages=[],e.getMessageClass=function(e){return"error"===e&&(e="danger"),"alert alert-"+e},e.dismiss=function(e){t.remove(e)},e.$on("event:flash.add",function(){e.flashMessages=t.all()}),e.$on("event:flash.remove",function(){e.flashMessages=t.all()}),e.$on("event:flash.clear",function(){e.flashMessages=[],e.$apply()})}]).directive("apHideFlash",["flash",function(e){return{restrict:"A",link:function(t,n){n.bind("click",function(t){var n=angular.element(t.target);n.parents().hasClass("flashcontainer")||e.clear()})}}}]),angular.module("appoints.createappointment",["ngRoute","ui.calendar"]).controller("CreateAppointmentCtrl",["$scope","$compile","usersession","$timeout","$location","uiCalendarConfig","config","$http","_","flash","moment",function(e,t,n,a,r,o,i,s,l,d,c){function p(){e.newAppointment={title:"",dateAndTime:c().startOf("day").add(1,"days").add(9,"hours").toDate(),duration:30,remarks:""},e.editAppointment=null}p(),e.createAppointment=function(){e.newAppointment.patientId=n.current.userId,e.newAppointment.doctorId=e.doctor.DoctorId;var t=i.apiEndpoint+"/appointments",a={method:"POST",url:t,data:e.newAppointment};return s(a).then(function(){d.add("Appointment created successfully","info"),r.url("/dashboard")},function(e){d.add(e.data.ExceptionMessage,"error")})},e.getDoctors=function(){var t={method:"GET",url:i.apiEndpoint+"/doctors"};return s(t).then(function(t){e.doctors=t.data},function(e){d.add(e.data.ExceptionMessage,"error")})},e.getAppointments=function(){e.calEventsExt.events=[];var t=i.apiEndpoint+"/doctors/"+e.doctor.UserDetails.UserId+"/appointments",n={method:"GET",url:t};return s(n).then(function(t){e.eventSources3=l.filter(t.data,function(t){return t.title=t.Title,t.start=c(t.DateAndTime),t.end=c(t.DateAndTime).add(t.Duration,"minutes"),t.allDay=!1,e.addEvent(t),t})},function(e){d.add(e.data.ExceptionMessage,"error")})},e.addEvent=function(t){e.calEventsExt.events.push(t)},e.calEventsExt={events:[]},e.alertOnEventClick=function(t){e.alertMessage=t.title+" was clicked "},e.changeView=function(e,t){o.calendars[t].fullCalendar("changeView",e)},e.renderCalendar=function(e){a(function(){o.calendars[e]&&o.calendars[e].fullCalendar("render")})},e.eventRender=function(n,a){a.attr({tooltip:n.title,"tooltip-append-to-body":!0}),t(a)(e)},e.uiConfig={calendar:{height:450,editable:!1,header:{left:"title",center:"",right:"today prev,next"},eventClick:e.alertOnEventClick,eventDrop:e.alertOnDrop,eventResize:e.alertOnResize,eventRender:e.eventRender}},e.optionChange=function(){e.getAppointments()},e.eventSources=[e.calEventsExt],e.getDoctors()}]),angular.module("appoints.usersession",["appoints.flash","appoints.config","mdo-angular-cryptography"]).factory("usersession",["$rootScope","$window","config","flash","$http","Base64","$crypto",function(e,t,n,a,r,o,i){function s(){return angular.copy(u,this)}function l(s){var l={method:"POST",url:n.apiEndpoint+"/login",data:s};return r(l).then(function(n){var a=n.data;a.UserId>0&&(m.isAuthenticated=!0,m.userId=a.UserId,m.displayName=a.DisplayName,m.isAdmin=a.IsAdmin,m.isDoctor=a.IsDoctor,m.authdata=o.encode(s.username+":"+s.password),r.defaults.headers.common.Authorization="Basic "+m.authdata,t.localStorage.setItem("access_token",i.encrypt(JSON.stringify(m))),e.$broadcast("event:loggedin",m))},function(e){a.add(e.data.ExceptionMessage,"error")})}function d(e){var t={method:"POST",url:n.apiEndpoint+"/signup",data:e};return r(t).then(function(e){return e},function(e){a.add(e.data.ExceptionMessage,"error")})}function c(e){var t={method:"PUT",url:n.apiEndpoint+"/login",data:e};return r(t).then(function(e){return e},function(e){a.add(e.data.ExceptionMessage,"error")})}function p(){t.localStorage.removeItem("access_token"),m=new s,e.$broadcast("event:loggedout",m)}var u={userId:"",displayName:"",isAuthenticated:!1,isAdmin:!1,isDoctor:!1,authdata:""},m=new s,f="";return{current:m,login:l,signup:d,updatelogindetails:c,logout:p,returnTo:f}}]).run(["$window","$rootScope","usersession","$http","$crypto",function(e,t,n,a,r){if(null!==e.localStorage.getItem("access_token")){var o=JSON.parse(r.decrypt(e.localStorage.getItem("access_token")));o.userId>0&&(n.current=o,a.defaults.headers.common.Authorization="Basic "+o.authdata,t.$broadcast("event:loggedin",n.current))}}]).factory("Base64",function(){var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";return{encode:function(t){var n,a,r,o,i,s="",l="",d="",c=0;do n=t.charCodeAt(c++),a=t.charCodeAt(c++),l=t.charCodeAt(c++),r=n>>2,o=(3&n)<<4|a>>4,i=(15&a)<<2|l>>6,d=63&l,isNaN(a)?i=d=64:isNaN(l)&&(d=64),s=s+e.charAt(r)+e.charAt(o)+e.charAt(i)+e.charAt(d),n=a=l="",r=o=i=d="";while(c<t.length);return s},decode:function(t){var n,a,r,o,i,s="",l="",d="",c=0,p=/[^A-Za-z0-9\+\/\=]/g;p.exec(t)&&window.alert("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"");do r=e.indexOf(t.charAt(c++)),o=e.indexOf(t.charAt(c++)),i=e.indexOf(t.charAt(c++)),d=e.indexOf(t.charAt(c++)),n=r<<2|o>>4,a=(15&o)<<4|i>>2,l=(3&i)<<6|d,s+=String.fromCharCode(n),64!=i&&(s+=String.fromCharCode(a)),64!=d&&(s+=String.fromCharCode(l)),n=a=l="",r=o=i=d="";while(c<t.length);return s}}}),angular.module("appoints.home",["appoints.config","ngRoute"]).controller("HomeCtrl",["$scope","appVersion","flash","$location","usersession",function(e,t,n,a,r){e.version=t,e.showPassword=!1,e.toggleShowPassword=function(){e.showPassword=!e.showPassword},e.login=function(){var t={};t.username=e.username,t.password=e.password,r.login(t).then(function(){r.current.isAuthenticated?r.returnTo?a.url(r.returnTo):a.url("/dashboard"):n.add("Invalid username or password.","error")})}}]),angular.module("appoints.dashboard",["appoints.config","appoints.usersession"]).controller("DashboardCtrl",["$scope","$compile","$timeout","uiCalendarConfig","config","usersession","$http","$location","flash","_","moment",function(e,t,n,a,r,o,i,s,l,d,c){e.user=o.current,e.getDoctors=function(){var t={method:"GET",url:r.apiEndpoint+"/doctors"};return i(t).then(function(t){e.doctors=t.data},function(e){l.add(e.data.ExceptionMessage,"error")})},e.getPatients=function(){var t={method:"GET",url:r.apiEndpoint+"/patients"};return i(t).then(function(t){e.patients=t.data},function(e){l.add(e.data.ExceptionMessage,"error")})},e.getAppointments=function(){var t={method:"GET",url:r.apiEndpoint+"/appointments"};return i(t).then(function(t){e.upcomingAdminAppointments=d.filter(t.data,function(e){return c(e.DateAndTime)>c()}),e.pastAdminAppointments=d.filter(t.data,function(e){return c(e.DateAndTime)<=c()})},function(e){l.add(e.data.ExceptionMessage,"error")})},e.getDoctorAppointments=function(){var t={method:"GET",url:r.apiEndpoint+"/doctors/"+o.current.userId+"/appointments"};return i(t).then(function(t){e.upcomingDoctorAppointments=d.filter(t.data,function(e){return e.title=e.Title,e.start=c(e.DateAndTime),e.end=c(e.DateAndTime).add(e.Duration,"minutes"),e.allDay=!1,c(e.DateAndTime)>c()}),e.pastDoctorAppointments=d.filter(t.data,function(t){return t.title=t.Title,t.start=c(t.DateAndTime),t.end=c(t.DateAndTime).add(t.Duration,"minutes"),t.allDay=!1,e.addEventDoc(t),c(t.DateAndTime)<=c()})},function(e){l.add(e.data.ExceptionMessage,"error")})},e.getPatientAppointments=function(){var t={method:"GET",url:r.apiEndpoint+"/patients/"+o.current.userId+"/appointments"};return i(t).then(function(t){e.upcomingPatientAppointments=d.filter(t.data,function(e){return e.title=e.Title,e.start=c(e.DateAndTime),e.end=c(e.DateAndTime).add(e.Duration,"minutes"),e.allDay=!1,c(e.DateAndTime)>c()}),e.pastPatientAppointments=d.filter(t.data,function(t){return t.title=t.Title,t.start=c(t.DateAndTime),t.end=c(t.DateAndTime).add(t.Duration,"minutes"),t.allDay=!1,e.addEventPat(t),c(t.DateAndTime)<=c()})},function(e){l.add(e.data.ExceptionMessage,"error")})},e.deleteAppointment=function(e){var t={method:"DELETE",url:r.apiEndpoint+"/appointments/"+e.AppointmentId};return i(t).then(function(){},function(e){l.add(e.data.ExceptionMessage,"error")})},e.addEvent=function(t){e.calEventsExt.events.push(t)},e.addEventDoc=function(t){e.calEventsDoc.events.push(t)},e.addEventPat=function(t){e.calEventsPat.events.push(t)},e.calEventsExt={events:[]},e.calEventsDoc={events:[]},e.calEventsPat={events:[]},e.eventSources=[e.calEventsExt],e.eventSourceDoctor=[e.calEventsDoc],e.eventSourcePatient=[e.calEventsPat],e.openDoctorDetails=function(e){s.url("/profile/true/true/"+e.UserDetails.UserId)},e.openPatientDetails=function(e){s.url("/profile/true/false/"+e.UserDetails.UserId)},e.openAppointment=function(e){c(e.DateAndTime)<=c()?s.url("/appointment/true/"+e.AppointmentId):s.url("/appointment/false/"+e.AppointmentId)},e.openAppointmentDoctor=function(e){s.url("/profile/true/true/"+e.DoctorUserId)},e.openAppointmentPatient=function(e){s.url("/profile/true/false/"+e.PatientUserId)},o.current.isAdmin?(e.getDoctors(),e.getPatients(),e.getAppointments()):o.current.isDoctor?e.getDoctorAppointments():e.getPatientAppointments(),e.eventClick=function(e){c(e.DateAndTime)<=c()?s.url("/appointment/true/"+e.AppointmentId):s.url("/appointment/false/"+e.AppointmentId)},e.changeView=function(e,t){a.calendars[t].fullCalendar("changeView",e)},e.renderCalendar=function(e){n(function(){a.calendars[e]&&a.calendars[e].fullCalendar("render")})},e.eventRender=function(n,a){a.attr({tooltip:n.title,"tooltip-append-to-body":!0}),t(a)(e)},e.uiConfig={calendar:{height:450,editable:!1,header:{left:"title",center:"",right:"today prev,next"},eventClick:e.eventClick,eventDrop:e.alertOnDrop,eventResize:e.alertOnResize,eventRender:e.eventRender}}}]),angular.module("appoints.profile",["appoints.config","appoints.usersession"]).controller("ProfileCtrl",["$scope","moment","config","usersession","$http","$location","flash","$routeParams",function(e,t,n,a,r,o,i,s){e.isreadonly="true"===s.isreadonly,e.maritalStatus={Id:0,Description:""},e.gender={Id:0,Description:""},$("#maritalStatus").attr("disabled",e.isreadonly),$("#gender").attr("disabled",e.isreadonly),e.getProfileData=function(){var o=n.apiEndpoint;o=e.isreadonly?"true"===s.isdoctor?o+"/doctors/"+s.userid:o+"/patients/"+s.userid:a.current.isAdmin?o+"/admins/"+a.current.userId:a.current.isDoctor?o+"/doctors/"+a.current.userId:o+"/patients/"+a.current.userId;var l={method:"GET",url:o};return r(l).then(function(n){e.profileData=n.data,e.maritalStatus.Id=e.profileData.UserDetails.MaritalStatus,e.gender.Id=e.profileData.UserDetails.Gender,e.profileData.DOJ&&(e.profileData.DOJ=t(e.profileData.DOJ).toDate())},function(e){i.add(e.data.ExceptionMessage,"error")})},e.saveProfileData=function(){var t=n.apiEndpoint;t+=a.current.isAdmin?"/admins":a.current.isDoctor?"/doctors":"/patients",e.profileData.UserDetails.MaritalStatus=e.maritalStatus.Id,e.profileData.UserDetails.Gender=e.gender.Id;var s={method:"PUT",url:t,data:e.profileData};return r(s).then(function(){i.add("Profile saved successfully","info"),o.url("/dashboard")},function(e){i.add(e.data.ExceptionMessage,"error")})},e.getGenderData=function(){var t={method:"GET",url:n.apiEndpoint+"/genders"};return r(t).then(function(t){e.gendersData=t.data},function(e){i.add(e.data.ExceptionMessage,"error")})},e.getMaritalStatusData=function(){var t={method:"GET",url:n.apiEndpoint+"/maritalstatus"};return r(t).then(function(t){e.maritalStatusData=t.data},function(e){i.add(e.data.ExceptionMessage,"error")})},e.goToDashboard=function(){o.url("/dashboard")},e.getProfileData(),e.getGenderData(),e.getMaritalStatusData()}]),angular.module("appoints.logindetails",["appoints.usersession","appoints.flash","ngRoute"]).controller("LoginDetailsCtrl",["$scope","flash","$location","usersession",function(e,t,n,a){e.updatelogindetails=function(){var r={};r.userId=a.current.userId,r.oldPassword=e.oldPassword,r.newPassword=e.newPassword,a.updatelogindetails(r).then(function(e){e&&(a.returnTo?n.url(a.returnTo):n.url("/dashboard"))},function(e){t.add(e.data.ExceptionMessage,"error")})}}]),angular.module("appoints.signin",["appoints.usersession","appoints.flash","ngRoute"]).controller("UserSigninCtrl",["$scope","flash","$location","usersession",function(e,t,n,a){e.showPassword=!1,e.toggleShowPassword=function(){e.showPassword=!e.showPassword},e.login=function(){var r={};r.username=e.username,r.password=e.password,a.login(r).then(function(){a.current.isAuthenticated?a.returnTo?n.url(a.returnTo):n.url("/dashboard"):t.add("Invalid username or password.","error")})}}]),angular.module("appoints",["ngRoute","ui.bootstrap.datetimepicker","appoints.directives","appoints.flash","appoints.usersession","appoints.home","appoints.signin","appoints.logindetails","appoints.signup","appoints.dashboard","appoints.profile","appoints.createappointment","appoints.appointment","appoints-client-templates","mdo-angular-cryptography"]).constant("_",window._).constant("moment",window.moment).config(["$httpProvider",function(e){e.defaults.useXDomain=!0,delete e.defaults.headers.common["X-Requested-With"]}]).config(["$cryptoProvider",function(e){e.setCryptographyKey("123456")}]).config(["$routeProvider",function(e){e.when("/",{templateUrl:"home/home.html",controller:"HomeCtrl",title:"Home"}).when("/appointment/:isreadonly/:appointmentid",{templateUrl:"appointments/appointment.html",controller:"AppointmentCtrl",title:"Appointment"}).when("/usersignin",{templateUrl:"auth/usersignin.html",controller:"UserSigninCtrl",title:"UserSignin"}).when("/usersignup",{templateUrl:"auth/usersignup.html",controller:"UserSignupCtrl",title:"UserSignup"}).when("/logindetails",{templateUrl:"auth/logindetails.html",controller:"LoginDetailsCtrl",title:"LoginDetails"}).when("/dashboard",{templateUrl:"appointments/dashboard.html",controller:"DashboardCtrl",title:"Dashboard"}).when("/createappointment",{templateUrl:"appointments/CreateAppointment.html",controller:"CreateAppointmentCtrl",title:"CreateAppointment"}).when("/profile/:isreadonly/:isdoctor/:userid",{templateUrl:"appointments/profile.html",controller:"ProfileCtrl",title:"Profile"})}]).controller("AppCtrl",["$scope","$location","usersession",function(e,t,n){var a="Appoints";e.pageTitle=a,e.$on("$routeChangeSuccess",function(t,n){e.pageTitle=angular.isUndefined?a:n.title||a}),e.user=n.current,e.routeIs=function(e){return t.path()===e},e.logout=function(){n.logout(),t.url("/")},e.goToDashboard=function(){e.user.isAuthenticated?t.url("/dashboard"):t.url("/")},e.$on("event:loggedin",function(t,a){e.user=a,n.current=a}),e.$on("event:loggedout",function(t,a){e.user=a,n.current=a})}]);