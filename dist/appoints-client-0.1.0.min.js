angular.module("appoints.appointments",["ngRoute"]).controller("AppointmentsCtrl",["$scope","$window","_","flash","moment",function(e,t,n,a,o){function r(){e.newAppointment={title:"",dateAndTime:o().startOf("day").add(1,"days").add(9,"hours").toDate(),duration:30,remarks:""},e.editAppointment=null}e.getEndTime=function(e){return o(e.dateAndTime).add(e.duration,"minutes").format("H:mm")},e.createAppointment=function(){e.newAppointment.endDateAndTime=o(e.newAppointment.dateAndTime).add(e.newAppointment.duration,"minutes")},e.setAppointmentForEdit=function(t){e.editAppointment=angular.copy(t)},r()}]),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("appointments/appointments.html",'<div ng-app="appoints" class="row"><div class="col-md-6"><h2>Create new appointment</h2><form role="form" name="form"><div class="form-group"><input class="form-control" id="title" placeholder="Enter appointment description" ng-model="newAppointment.title"></div><div class="form-group"><label for="dateAndTime">Appointment date and time</label><div class="dropdown"><a class="dropdown-toggle" id="dropdown2" role="button" data-toggle="dropdown"><div class="input-group"><p class="form-control-static">{{ newAppointment.dateAndTime | date:\'d MMM, y H:mm\' }}</p></div></a><ul class="dropdown-menu" role="menu" aria-labelledby="dLabel"><datetimepicker ng-model="newAppointment.dateAndTime" data-on-set-time="onTimeSet(newDate, oldDate)" datetimepicker-config="{ dropdownSelector: \'#dropdown2\', startView: \'hour\', minuteStep: 15 }"></ul></div></div><div class="form-group"><label for="duration">Duration</label><select class="form-control" id="duration" ng-model="newAppointment.duration"><option value="15">15 minutes</option><option value="30">30 minutes</option><option value="60">60 minutes</option><option value="90">90 minutes</option></select></div><div class="form-group"><label for="remarks">Remarks</label><textarea id="remarks" class="form-control" rows="3" ng-model="newAppointment.remarks"> </textarea></div><button type="submit" class="btn btn-default" ng-click="createAppointment()" ng-disabled="form.$invalid">Create</button></form></div><div class="col-md-6"><h2>Upcoming appointments</h2><p ng-if="upcomingAppointments.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="appointment in upcomingAppointments"><div><div class="dropdown"><a href="" class="pull-right" ng-click="removeAppointment(appointment)" title="Remove"><span class="glyphicon glyphicon-remove"></span></a> <a class="dropdown-toggle" role="button" data-toggle="dropdown" data-target="#" title="Reschedule appointment" id="appointment{{$index}}" href="" ng-click="setAppointmentForEdit(appointment)"><span class="glyphicon glyphicon-time"></span></a><ul class="dropdown-menu" role="menu"><datetimepicker data-ng-model="editAppointment.dateAndTime" data-datetimepicker-config="{ dropdownSelector: \'#appointment{{$index}}\', startView: \'hour\', minuteStep: 15 }" on-set-time="reschedule(newDate, oldDate)"></ul></div></div><h4 class="list-group-item-heading">{{appointment.title}} <small>{{appointment.dateAndTime | date:\'d MMM, y H:mm\'}}-{{appointment.endDateAndTime | date:\'H:mm\'}}, duration {{appointment.duration}} mins</small></h4><p class="list-group-item-text">{{appointment.remarks}}</p></li></ul><h2>Past appointments</h2><p ng-if="pastAppointments.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="appointment in pastAppointments"><div><a href="" class="pull-right" ng-click="removeAppointment(appointment)" title="Remove"><span class="glyphicon glyphicon-remove"></span></a></div><h4 class="list-group-item-heading">{{appointment.title}} <small>{{appointment.dateAndTime | date:\'d MMM, y H:mm\'}}-{{appointment.endDateAndTime | date:\'H:mm\'}}, duration {{appointment.duration}} mins</small></h4><p class="list-group-item-text">{{appointment.remarks}}</p></li></ul></div></div>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("appointments/CreateAppointment.html",'<div id="example" ng-app="appoints"><div class="col-md-4"><h2 style="text-align: center"><b>Create new appointment</b></h2><form role="form" name="form"><div class="form-group"><label for="doctor">Doctor</label><select class="form-control" id="doctor" ng-model="newAppointment.doctor"><option value="" disabled selected>Select your option</option><option value="1">James Thomas</option><option value="2">Jack Connor</option><option value="3">William</option><option value="4">Michael Johanson</option></select></div><div class="form-group"><label for="title">Title</label><input class="form-control" id="title" placeholder="Enter appointment description" ng-model="newAppointment.title" required></div><div class="form-group"><label for="dateAndTime">Appointment date and time</label><div class="dropdown"><a class="dropdown-toggle" id="dropdown1" role="button" data-toggle="dropdown"><div class="input-group"><input required data-date-time-input="MM/DD/YYYY HH:mm:ss" class="form-control" data-ng-model="newAppointment.dateAndTime"> <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span></div></a><ul class="dropdown-menu" role="menu" aria-labelledby="dLabel"><datetimepicker data-ng-model="newAppointment.dateAndTime" data-datetimepicker-config="{ dropdownSelector: \'#dropdown1\', startView: \'hour\', minuteStep: 15 }"></datetimepicker></ul></div></div><div class="form-group"><label for="duration">Duration</label><select class="form-control" id="duration" ng-model="newAppointment.duration"><option value="15">15 minutes</option><option value="30">30 minutes</option><option value="60">60 minutes</option><option value="90">90 minutes</option></select></div><div class="form-group"><label for="remarks">Remarks</label><textarea id="remarks" class="form-control" rows="4" placeholder="Enter additional remarks" ng-model="newAppointment.remarks"> </textarea></div><button type="submit" class="btn btn-default" ng-click="createAppointment()" ng-disabled="form.$invalid">Create</button></form></div><div class="col-md-8"><h2 style="text-align: center"><b>Doctor\'s Appointment Calendar</b></h2><div class="btn-toolbar"><div class="btn-group"><button class="btn btn-success" ng-click="changeView(\'agendaDay\', \'myCalendar\')">AgendaDay</button> <button class="btn btn-success" ng-click="changeView(\'agendaWeek\', \'myCalendar\')">AgendaWeek</button> <button class="btn btn-success" ng-click="changeView(\'month\', \'myCalendar\')">Month</button></div></div><div class="calendar" ng-model="eventSources" calendar="myCalendar" ui-calendar="uiConfig.calendar"></div></div></div>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("appointments/dashboard.html",'<div ng-app="appoints"><h1 style="text-align: center"><b>Welcome! {{user.displayName}}</b></h1><div class="col-md-4" ng-if="user.isAdmin"><h2><b>List of Doctors</b></h2><p ng-if="doctors.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="doctor in doctors"><h4 class="list-group-item-heading"><a href="" ng-click="openDoctorDetails(doctor)"><b>{{doctor.UserDetails.FirstName}} {{doctor.UserDetails.LastName}}</b></a></h4><h5 class="list-group-item-heading">Graduated from: {{doctor.GraduatedFrom}}</h5><h5 class="list-group-item-heading">Practice: {{doctor.FieldOfPractice}}</h5><p class="list-group-item-text">{{doctor.CurrentWorkingStatus}}</p></li></ul></div><div class="col-md-4" ng-if="user.isAdmin"><h2><b>List of Patients</b></h2><p ng-if="patients.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="patient in patients"><h4 class="list-group-item-heading"><a href="" ng-click="openPatientDetails(patient)"><b>{{patient.UserDetails.FirstName}} {{patient.UserDetails.LastName}}</b></a></h4><h5 class="list-group-item-heading">Health Issues: {{patient.HealthIssues}}</h5><h5 class="list-group-item-heading">Allergies: {{patient.Allergies}}</h5><p class="list-group-item-text">{{patient.CurrentWorkingStatus}}</p></li></ul></div><div class="col-md-4" ng-if="user.isAdmin"><h2><b>List of Appointments</b></h2><p ng-if="appointments.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="appointment in appointments"><h4 class="list-group-item-heading"><b>{{appointment.Title}}</b> <small>{{appointment.DateAndTime | date:\'d MMM, y H:mm\'}}, duration: {{appointment.Duration}} mins</small></h4><h5 class="list-group-item-heading">Patient: <a href="" ng-click="openAppointmentPatient(appointment)">{{appointment.PatientName}}</a></h5><h5 class="list-group-item-heading">Doctor: <a href="" ng-click="openAppointmentDoctor(appointment)">{{appointment.DoctorName}}</a></h5><h5 class="list-group-item-heading">Remarks: {{appointment.Remarks}}</h5></li></ul></div><div class="col-md-4" ng-if="!user.isAdmin && user.isDoctor"><h2><b>List of Doctor\'s Appointments</b></h2><p ng-if="eventSourceDoctor.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="appointment in eventSourceDoctor"><h4 class="list-group-item-heading"><b>{{appointment.Title}}</b> <small>{{appointment.DateAndTime | date:\'d MMM, y H:mm\'}}, duration: {{appointment.Duration}} mins</small></h4><h5 class="list-group-item-heading">Patient: <a href="" ng-click="openAppointmentPatient(appointment)">{{appointment.PatientName}}</a></h5><h5 class="list-group-item-heading">Remarks: {{appointment.Remarks}}</h5></li></ul></div><div class="col-md-8" ng-if="!user.isAdmin && user.isDoctor"><h2 style="text-align: center"><b>Doctor\'s Appointment Calendar</b></h2><div class="btn-toolbar"><div class="btn-group"><button class="btn btn-success" ng-click="changeView(\'agendaDay\', \'myCalendar\')">AgendaDay</button> <button class="btn btn-success" ng-click="changeView(\'agendaWeek\', \'myCalendar\')">AgendaWeek</button> <button class="btn btn-success" ng-click="changeView(\'month\', \'myCalendar\')">Month</button></div></div><div class="calendar" ng-model="eventSourceDoctor" calendar="myCalendar" ui-calendar="uiConfig.calendar"></div></div><div class="col-md-4" ng-if="!user.isAdmin && !user.isDoctor"><h2><b>List of Patient\'s Appointments</b></h2><p ng-if="eventSourcePatient.length === 0">-- None --</p><ul class="list-group"><li class="list-group-item" ng-repeat="appointment in eventSourcePatient"><h4 class="list-group-item-heading"><b>{{appointment.Title}}</b> <small>{{appointment.DateAndTime | date:\'d MMM, y H:mm\'}}, duration: {{appointment.Duration}} mins</small></h4><h5 class="list-group-item-heading">Doctor: <a href="" ng-click="openAppointmentPatient(appointment)">{{appointment.DoctorName}}</a></h5><h5 class="list-group-item-heading">Remarks: {{appointment.Remarks}}</h5></li></ul></div><div class="col-md-8" ng-if="!user.isAdmin && !user.isDoctor"><h2 style="text-align: center"><b>Patient\'s Appointment Calendar</b></h2><div class="btn-toolbar"><div class="btn-group"><button class="btn btn-success" ng-click="changeView(\'agendaDay\', \'myCalendar\')">AgendaDay</button> <button class="btn btn-success" ng-click="changeView(\'agendaWeek\', \'myCalendar\')">AgendaWeek</button> <button class="btn btn-success" ng-click="changeView(\'month\', \'myCalendar\')">Month</button></div></div><div class="calendar" ng-model="eventSourcePatient" calendar="myCalendar" ui-calendar="uiConfig.calendar"></div></div></div>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("appointments/logindetails.html",'<div ng-app="appoints" class="col-md-6 col-md-offset-3"><h1 style="text-align: center;padding-bottom: 25px"><b>Update Login Details</b></h1><form name="form" ng-submit="vm.login()" role="form"><div class="form-group" ng-class="{ \'has-error\': form.oldPassword.$dirty && form.oldPassword.$error.required }"><label for="oldPassword">Old Password</label><input type="password" name="oldPassword" id="oldPassword" class="form-control" ng-model="oldPassword" required> <span ng-show="form.oldPassword.$dirty && form.oldPassword.$error.required" class="help-block">Old password is required</span></div><div class="form-group" ng-class="{ \'has-error\': form.newPassword.$dirty && form.newPassword.$error.required }"><label for="newPassword">New Password</label><input type="password" name="newPassword" id="newPassword" class="form-control" ng-model="newPassword" required> <span ng-show="form.newPassword.$dirty && form.newPassword.$error.required" class="help-block">New password is required</span></div><div class="form-actions"><button type="submit" ng-click="updatelogindetails()" ng-disabled="form.$invalid || vm.dataLoading" class="btn btn-primary">Submit</button> <a href="#/dashboard" class="btn btn-link">Cancel</a></div></form></div>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("appointments/profile.html",'<div class="" ng-app="appoints" ng-controller="ProfileCtrl"><div style="font-size: larger;padding-left: 5%" ng-if="isreadonly"><a class="dropdown-toggle" role="button" title="Go to Dashboard" id="patient{{$index}}" href="" ng-click="goToLandingPage()"><span class="glyphicon glyphicon-circle-arrow-left"></span>Go to dashboard</a></div><h2 ng-if="!dataLoading" style="text-align: center">Details of: <b>{{profileData.UserDetails.FirstName}} {{profileData.UserDetails.LastName}}</b></h2><form name="form" ng-submit="register()" ng-if="!dataLoading" role="form"><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-12" ng-class="{ \'has-error\': form.email.$dirty && (form.email.$error.required || form.email.$error.email) }"><label for="email">Email</label><input type="email" name="email" id="email" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.Email" required> <span ng-show="form.email.$dirty && form.email.$error.email" class="help-block">This email format is invalid!</span> <span ng-show="form.email.$dirty && form.email.$error.required" class="help-block">Email is required</span></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6" ng-class="{ \'has-error\': form.firstName.$dirty && form.firstName.$error.required }"><label for="firstName">First name</label><input name="firstName" id="firstName" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.FirstName" required> <span ng-show="form.firstName.$dirty && form.firstName.$error.required" class="help-block">First name is required</span></div><div class="form-group col-md-6" ng-class="{ \'has-error\': form.lastName.$dirty && form.lastName.$error.required }"><label for="lastName">Last name</label><input name="lastName" id="lastName" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.LastName" required> <span ng-show="form.lastName.$dirty && form.lastName.$error.required" class="help-block">Last name is required</span></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6"><label for="maritalStatus">Marital Status</label><input name="maritalStatus" id="maritalStatus" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.MaritalStatus"></div><div class="form-group col-md-6"><label for="gender">Gender</label><input name="gender" id="gender" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.Gender"></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6"><label for="address">Address</label><input name="address" id="address" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.Address"></div><div class="form-group col-md-6"><label for="postalCode">Postal Code</label><input name="postalCode" id="postalCode" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.PostalCode"></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6"><label for="city">City</label><input name="city" id="city" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.City"></div><div class="form-group col-md-6"><label for="province">Province</label><input name="province" id="province" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.Province"></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6"><label for="country">Country</label><input name="country" id="country" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.Country"></div><div class="form-group col-md-6"><label for="contact">Contact</label><input type="number" name="contact" id="contact" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.UserDetails.Contact"></div></div><h2 style="text-align: center" ng-if="!profileData.UserDetails.IsAdmin && profileData.UserDetails.IsDoctor"><b>Doctor\'s Details</b></h2><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%" ng-if="!profileData.UserDetails.IsAdmin && profileData.UserDetails.IsDoctor"><div class="form-group col-md-6"><label for="availability">Availability</label><input name="availability" id="availability" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.Availability"></div><div class="form-group col-md-6"><label for="currentWorkingStatus">Current Working Status</label><input name="currentWorkingStatus" id="currentWorkingStatus" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.CurrentWorkingStatus"></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%" ng-if="!profileData.UserDetails.IsAdmin && profileData.UserDetails.IsDoctor"><div class="form-group col-md-6"><label for="department">Department</label><input name="department" id="department" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.Department"></div><div class="form-group col-md-6"><label for="fieldOfPractice">Field of Practice</label><input name="fieldOfPractice" id="fieldOfPractice" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.FieldOfPractice"></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%" ng-if="!profileData.UserDetails.IsAdmin && profileData.UserDetails.IsDoctor"><div class="form-group col-md-6"><label for="degree">Degree</label><input name="degree" id="degree" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.Degree"></div><div class="form-group col-md-6"><label for="graduatedFrom">Graduated From</label><input name="graduatedFrom" id="graduatedFrom" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.GraduatedFrom"></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%" ng-if="!profileData.UserDetails.IsAdmin && profileData.UserDetails.IsDoctor"><div class="form-group col-md-6"><label for="dateOfJoining">Date of Joining</label><input name="dateOfJoining" id="dateOfJoining" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.DOJ"></div><div class="form-group col-md-6"><label for="yearsOfExp">Years of Experience</label><input name="yearsOfExp" id="yearsOfExp" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.YearsOfExp"></div></div><h2 style="text-align: center" ng-if="!profileData.UserDetails.IsAdmin && !profileData.UserDetails.IsDoctor"><b>Patient\'s Details</b></h2><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%" ng-if="(!profileData.UserDetails.IsAdmin && !profileData.UserDetails.IsDoctor)"><div class="form-group col-md-6"><label for="allergies">Allergies</label><input name="allergies" id="allergies" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.Allergies"></div><div class="form-group col-md-6"><label for="healthIssues">Health Issues</label><input name="healthIssues" id="healthIssues" class="form-control" ng-readonly="{{isreadonly}}" ng-model="profileData.HealthIssues"></div></div><div class="form-group col-md-12" ng-if="!isreadonly" style="padding-left: 15%;padding-right: 15%"><div class="form-actions col-md-6"><button type="submit" ng-disabled="form.$invalid || dataLoading" class="btn btn-primary">Submit</button> <a href="#/dashboard" class="btn btn-link">Cancel</a></div></div></form></div>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("appointments/usersignin.html",'<div ng-app="appoints" class="col-md-6 col-md-offset-3"><h1 style="text-align: center;padding-bottom: 25px"><b>Login</b></h1><form name="form" ng-submit="vm.login()" role="form"><div class="form-group" ng-class="{ \'has-error\': form.username.$dirty && form.username.$error.required }"><label for="username">Username</label><input name="username" id="username" class="form-control" ng-model="username" required> <span ng-show="form.username.$dirty && form.username.$error.required" class="help-block">Username is required</span></div><div class="form-group" ng-class="{ \'has-error\': form.password.$dirty && form.password.$error.required }"><label for="password">Password</label><input type="password" name="password" id="password" class="form-control" ng-model="password" required> <span ng-show="form.password.$dirty && form.password.$error.required" class="help-block">Password is required</span></div><div class="form-actions"><button type="submit" ng-click="login()" ng-disabled="form.$invalid || vm.dataLoading" class="btn btn-primary">Login</button> <a href="#/usersignup" class="btn btn-link">Signup</a></div></form></div>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("appointments/usersignup.html",'<div class="" ng-app="appoints"><h1 style="text-align: center;padding-bottom: 25px">Sign up your practice to <b>DOC Connect</b></h1><form name="form" ng-submit="vm.register()" role="form"><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-12" ng-class="{ \'has-error\': form.email.$dirty && (form.email.$error.required || form.email.$error.email) }"><label for="username">Email</label><span class="mandatoryField" style="color: red">*</span> <input type="email" name="email" id="email" class="form-control" ng-model="signupObj.email" required> <span ng-show="form.email.$dirty && form.email.$error.email" class="help-block">This email format is invalid!</span> <span ng-show="form.email.$dirty && form.email.$error.required" class="help-block">Email is required</span></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6" ng-class="{ \'has-error\': form.firstName.$dirty && form.firstName.$error.required }"><label for="username">First name</label><span class="mandatoryField" style="color: red">*</span> <input name="firstName" id="firstName" class="form-control" ng-model="signupObj.firstName" required> <span ng-show="form.firstName.$dirty && form.firstName.$error.required" class="help-block">First name is required</span></div><div class="form-group col-md-6" ng-class="{ \'has-error\': form.lastName.$dirty && form.lastName.$error.required }"><label for="username">Last name</label><span class="mandatoryField" style="color: red">*</span> <input name="lastName" id="lastName" class="form-control" ng-model="signupObj.lastName" required> <span ng-show="form.lastName.$dirty && form.lastName.$error.required" class="help-block">Last name is required</span></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6" ng-class="{ \'has-error\': form.username.$dirty && form.username.$error.required }"><label for="username">Username</label><span class="mandatoryField" style="color: red">*</span> <input name="username" id="username" class="form-control" ng-model="signupObj.username" required> <span ng-show="form.username.$dirty && form.username.$error.required" class="help-block">Username is required</span></div><div class="form-group col-md-6" ng-class="{ \'has-error\': form.password.$dirty && form.password.$error.required }"><label for="password">Password</label><span class="mandatoryField" style="color: red">*</span> <input type="password" name="password" id="password" class="form-control" ng-model="signupObj.password" required> <span ng-show="form.password.$dirty && form.password.$error.required" class="help-block">Password is required</span></div></div><div class="form-check col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6"><label for="isPractitioner">I am a practitioner</label><input type="checkbox" name="isPractitioner" id="isPractitioner" ng-model="signupObj.isPractitioner"></div></div><div class="form-group col-md-12" ng-show="signupObj.isPractitioner" style="padding-left: 15%;padding-right: 15%"><div class="form-group col-md-6"><label for="specialty">Your specialty</label><input name="specialty" id="specialty" class="form-control" ng-model="signupObj.specialty"> <small class="form-text text-muted"><i>"Dentistry", "Chiropractics"</i>, etc.</small></div><div class="form-group col-md-6"><label for="credentials">Credentials</label><input name="credentials" id="credentials" class="form-control" ng-model="signupObj.credentials"> <small class="form-text text-muted"><i>MD, BDS, DPM</i>, etc.</small></div></div><div class="form-group col-md-12" style="padding-left: 15%;padding-right: 15%"><div class="form-actions col-md-6"><button type="submit" ng-click="signup()" ng-disabled="form.$invalid || vm.dataLoading" class="btn btn-primary">Sign up</button> <a href="#/usersignin" class="btn btn-link">Cancel</a></div></div></form></div>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("home/home.html",'<div class="row"><div class="col-md-6" style="padding-top: 20px;font-family: cursive;font-size: 50px">A Good and healthy body is the reason behind a healthy mind.</div><div class="col-md-6"><img src="assets/images/image1.png"></div></div><div class="row"></div><footer class="pull-right">DOC Connect {{version}} - &copy; Pritpal Singh Kandhari, 2022</footer>')}])}(),function(e){try{e=angular.module("appoints-client-templates")}catch(t){e=angular.module("appoints-client-templates",[])}e.run(["$templateCache",function(e){e.put("shared/flash.html",'<section ng-controller="FlashCtrl" class="flashcontainer"><div ng-repeat="flashMessage in flashMessages" ng-class="getMessageClass(flashMessage.level)"><button type="button" class="close" data-dismiss="alert" ng-click="dismiss(flashMessage)">&times;</button> {{flashMessage.message}}<ul ng-if="flashMessage.details.errors"><li ng-repeat="error in flashMessage.details.errors">{{error.message}}</li></ul></div></section>')}])}(),angular.module("ui.calendar",[]).constant("uiCalendarConfig",{calendars:{}}).controller("uiCalendarCtrl",["$scope","$locale",function(e,t){var n=e.eventSources,a=e.calendarWatchEvent?e.calendarWatchEvent:angular.noop,o=function(t){return function(){if(e.$root.$$phase)return t.apply(this,arguments);var n=arguments,a=this;return e.$root.$apply(function(){return t.apply(a,n)})}},r=1;this.eventFingerprint=function(e){e._id||(e._id=r++);var t=a({event:e})||"",n=moment.isMoment(e.start)?e.start.unix():e.start?moment(e.start).unix():"",o=moment.isMoment(e.end)?e.end.unix():e.end?moment(e.end).unix():"";return[e._id,e.id||"",e.title||"",e.url||"",n,o,e.allDay||"",e.className||"",t].join("")};var i=1,s=1;this.sourceFingerprint=function(e){var t=""+(e.__id||(e.__id=i++)),n=angular.isObject(e)&&e.events;return n&&(t=t+"-"+(n.__id||(n.__id=s++))),t},this.allEvents=function(){return Array.prototype.concat.apply([],(n||[]).reduce(function(e,t){if(angular.isArray(t))e.push(t);else if(angular.isObject(t)&&angular.isArray(t.events)){var n=Object.keys(t).filter(function(e){return"_id"!==e&&"events"!==e});t.events.forEach(function(e){angular.extend(e,n)}),e.push(t.events)}return e},[]))},this.changeWatcher=function(e,t){var n,a=function(){return((angular.isFunction(e)?e():e)||[]).reduce(function(e,n){var a=t(n);return r[a]=n,e.push(a),e},[])},o=function(e,t){var n=(t||[]).reduce(function(e,t){return e[t]=!0,e},Object.create(null));return(e||[]).filter(function(e){return!n[e]})},r={},i=function(e,a){var i,s,l={},d=o(a,e);for(i=0;i<d.length;i++){var p=d[i],c=r[p];delete r[p];var m=t(c);m===p?n.onRemoved(c):(l[m]=p,n.onChanged(c))}var u=o(e,a);for(i=0;i<u.length;i++)s=u[i],l[s]||n.onAdded(r[s])};return n={subscribe:function(e,t){e.$watch(a,function(e,n){var a=!(t&&t(e,n)===!1);a&&i(e,n)},!0)},onAdded:angular.noop,onChanged:angular.noop,onRemoved:angular.noop}},this.getFullCalendarConfig=function(e,t){var n={};return angular.extend(n,t),angular.extend(n,e),angular.forEach(n,function(e,t){"function"==typeof e&&(n[t]=o(n[t]))}),n},this.getLocaleConfig=function(e){if(!e.lang&&!e.locale||e.useNgLocale){var n=function(e){return(Object.keys(e)||[]).reduce(function(t,n){return t.push(e[n]),t},[])},a=t.DATETIME_FORMATS;return{monthNames:n(a.MONTH),monthNamesShort:n(a.SHORTMONTH),dayNames:n(a.DAY),dayNamesShort:n(a.SHORTDAY)}}return{}}}]).directive("uiCalendar",["uiCalendarConfig",function(e){return{restrict:"A",scope:{eventSources:"=ngModel",calendarWatchEvent:"&"},controller:"uiCalendarCtrl",link:function(t,n,a,o){function r(){var n=a.uiCalendar?t.$parent.$eval(a.uiCalendar):{},r=o.getFullCalendarConfig(n,e),i=o.getLocaleConfig(r);angular.extend(i,r),c={eventSources:s},angular.extend(c,i),c.calendars=null;var l={};for(var d in c)"eventSources"!==d&&(l[d]=c[d]);return JSON.stringify(l)}var i,s=t.eventSources,l=!1,d=o.changeWatcher(s,o.sourceFingerprint),p=o.changeWatcher(o.allEvents,o.eventFingerprint),c=null;t.destroyCalendar=function(){i&&i.fullCalendar&&i.fullCalendar("destroy"),i=a.calendar?e.calendars[a.calendar]=angular.element(n).html(""):angular.element(n).html("")},t.initCalendar=function(){i||(i=$(n).html("")),i.fullCalendar(c),a.calendar&&(e.calendars[a.calendar]=i)},t.$on("$destroy",function(){t.destroyCalendar()}),d.onAdded=function(t){i&&i.fullCalendar&&(i.fullCalendar(c),a.calendar&&(e.calendars[a.calendar]=i),i.fullCalendar("addEventSource",t),l=!0)},d.onRemoved=function(e){i&&i.fullCalendar&&(i.fullCalendar("removeEventSource",e),l=!0)},d.onChanged=function(){i&&i.fullCalendar&&(i.fullCalendar("refetchEvents"),l=!0)},p.onAdded=function(e){i&&i.fullCalendar&&i.fullCalendar("renderEvent",e,!!e.stick)},p.onRemoved=function(e){i&&i.fullCalendar&&i.fullCalendar("removeEvents",e._id)},p.onChanged=function(e){if(i&&i.fullCalendar)for(var t=i.fullCalendar("clientEvents",e._id),n=0;n<t.length;n++){var a=t[n];a=angular.extend(a,e),i.fullCalendar("updateEvent",a)}},d.subscribe(t),p.subscribe(t,function(){return l===!0?(l=!1,!1):void 0}),t.$watch(r,function(e,n){e!==n?(t.destroyCalendar(),t.initCalendar()):e&&angular.isUndefined(i)&&t.initCalendar()})}}}]),angular.module("appoints.config",[]).constant("config",{defaultApiEndpoint:"http://localhost:3000",apiEndpoint:"http://localhost/DocConnectAPI"}).constant("appName","appoints-client").constant("appVersion","0.1.0").constant("appDescription","Doctor appointment scheduler app"),angular.module("appoints.directives",[]),angular.module("appoints.flash",[]).factory("flash",["$rootScope","$timeout",function(e,t){function n(n,a,o){a=a||"info";
var i={message:n,level:a,details:o};s.push(i),t(function(){r(i)},5e3),e.$broadcast("event:flash.add",i)}function a(e){e.message?n(e.message,"error",e):n(e,"error")}function o(){return s}function r(t){var n=s.indexOf(t);s.splice(n,1),e.$broadcast("event:flash.remove",t)}function i(){s=[],e.$broadcast("event:flash.clear",!0)}var s=[];return{add:n,addError:a,all:o,remove:r,clear:i}}]).controller("FlashCtrl",["$scope","flash",function(e,t){e.flashMessages=[],e.getMessageClass=function(e){return"error"===e&&(e="danger"),"alert alert-"+e},e.dismiss=function(e){t.remove(e)},e.$on("event:flash.add",function(){e.flashMessages=t.all()}),e.$on("event:flash.remove",function(){e.flashMessages=t.all()}),e.$on("event:flash.clear",function(){e.flashMessages=[],e.$apply()})}]).directive("apHideFlash",["flash",function(e){return{restrict:"A",link:function(t,n){n.bind("click",function(t){var n=angular.element(t.target);n.parents().hasClass("flashcontainer")||e.clear()})}}}]),angular.module("appoints.createappointment",["ngRoute","ui.calendar"]).controller("CreateAppointmentCtrl",["$scope","$compile","$timeout","uiCalendarConfig","config","$http","_","flash","moment",function(e,t,n,a,o,r,i,s,l){function d(){e.newAppointment={title:"",dateAndTime:l().startOf("day").add(1,"days").add(9,"hours").toDate(),duration:30,remarks:""},e.editAppointment=null}d(),e.getEndTime=function(e){return l(e.dateAndTime).add(e.duration,"minutes").format("H:mm")},e.createAppointment=function(){e.newAppointment.patientId=1,e.newAppointment.doctorId=1;var t=o.apiEndpoint+"/appointments",n={method:"POST",url:t,data:e.newAppointment};return r(n).then(function(){s.add("Appointment created successfully","info"),d(),e.getAppointments()},function(e){s.add(e.data.ExceptionMessage,"error")})},e.getAppointments=function(){e.calEventsExt.events=[],e.newAppointment.doctorId=1;var t=o.apiEndpoint+"/doctors/"+e.newAppointment.doctorId+"/appointments",n={method:"GET",url:t};return r(n).then(function(t){e.eventSources3=i.filter(t.data,function(t){return t.title=t.Title,t.start=l(t.DateAndTime),t.end=l(t.DateAndTime).add(t.Duration,"minutes"),t.allDay=!1,e.addEvent(t),t})},function(e){s.add(e.data.ExceptionMessage,"error")})},e.addEvent=function(t){e.calEventsExt.events.push(t)},e.setAppointmentForEdit=function(t){e.editAppointment=angular.copy(t)},e.calEventsExt={events:[]},e.alertOnEventClick=function(t){e.alertMessage=t.title+" was clicked "},e.changeView=function(e,t){a.calendars[t].fullCalendar("changeView",e)},e.renderCalendar=function(e){n(function(){a.calendars[e]&&a.calendars[e].fullCalendar("render")})},e.eventRender=function(n,a){a.attr({tooltip:n.title,"tooltip-append-to-body":!0}),t(a)(e)},e.uiConfig={calendar:{height:450,editable:!1,header:{left:"title",center:"",right:"today prev,next"},eventClick:e.alertOnEventClick,eventDrop:e.alertOnDrop,eventResize:e.alertOnResize,eventRender:e.eventRender}},e.getAppointments(),e.eventSources=[e.calEventsExt]}]),angular.module("appoints.home",["appoints.config","ngRoute"]).controller("HomeCtrl",["$scope","appVersion",function(e,t){e.version=t}]),angular.module("appoints.api",["angular-hal","appoints.config"]).factory("appointsapi",["halClient","config",function(e,t){var n=e.$get(t.defaultApiEndpoint);return{apiRoot:n}}]),angular.module("appoints.signup",["ngRoute","appoints.api"]).controller("UserSignupCtrl",["$scope","usersession","$location",function(e,t,n){e.signupObj={email:"",firstName:"",lastName:"",username:"",password:"",isPractitioner:!1,specialty:"",credentials:""},e.signup=function(){t.signup(e.signupObj).then(function(e){var t=e.data;t.UserId>0&&n.url("/usersignin")})}}]),angular.module("appoints.usersession",["appoints.api","appoints.flash","appoints.config"]).factory("usersession",["$rootScope","$window","config","flash","$http",function(e,t,n,a,o){function r(){return angular.copy(p,this)}function i(r){t.localStorage.setItem("access_token",r.username+"~"+r.userPassword);var i={method:"POST",url:n.apiEndpoint+"/login",data:r};return o(i).then(function(t){var n=t.data;n.UserId>0&&(c.isAuthenticated=!0,c.userId=n.UserId,c.displayName=n.DisplayName,c.isAdmin=n.IsAdmin,c.isDoctor=n.IsDoctor,e.$broadcast("event:loggedin",c))},function(e){a.add(e.data.ExceptionMessage,"error")})}function s(e){var t={method:"POST",url:n.apiEndpoint+"/signup",data:e};return o(t).then(function(e){return e},function(e){a.add(e.data.ExceptionMessage,"error")})}function l(e){var t={method:"PUT",url:n.apiEndpoint+"/login",data:e};return o(t).then(function(e){return e},function(e){a.add(e.data.ExceptionMessage,"error")})}function d(){t.localStorage.removeItem("access_token"),c=new r,e.$broadcast("event:loggedout",c)}var p={userId:"",displayName:"",isAuthenticated:!1,isAdmin:!1,isDoctor:!1},c=new r,m="";return{current:c,login:i,signup:s,updatelogindetails:l,logout:d,returnTo:m}}]).run(["$window","$rootScope","$log","usersession","config","flash","$http",function(e,t,n,a,o,r,i){if(null!==e.localStorage.getItem("access_token")){var s={username:e.localStorage.getItem("access_token").split("~")[0],userPassword:e.localStorage.getItem("access_token").split("~")[1]},l={method:"POST",url:o.apiEndpoint+"/login",data:s};return i(l).then(function(e){var n=e.data;n.UserId>0&&(a.current.isAuthenticated=!0,a.current.userId=n.UserId,a.current.displayName=n.DisplayName,a.current.isAdmin=n.IsAdmin,a.current.isDoctor=n.IsDoctor,t.$broadcast("event:loggedin",a.current))},function(e){n.info("Unable to login automatically: "+e.message),r.add("Unable to login automatically: "+e.data.ExceptionMessage,"error")})}}]),angular.module("appoints.dashboard",["appoints.config","appoints.usersession"]).controller("DashboardCtrl",["$scope","$compile","$timeout","uiCalendarConfig","config","usersession","$http","$location","flash","_","moment",function(e,t,n,a,o,r,i,s,l,d,p){e.user=r.current,e.getDoctors=function(){var t={method:"GET",url:o.apiEndpoint+"/doctors"};return i(t).then(function(t){e.doctors=t.data},function(e){l.add(e.data.ExceptionMessage,"error")})},e.getPatients=function(){var t={method:"GET",url:o.apiEndpoint+"/patients"};return i(t).then(function(t){e.patients=t.data},function(e){l.add(e.data.ExceptionMessage,"error")})},e.getAppointments=function(){var t={method:"GET",url:o.apiEndpoint+"/appointments"};return i(t).then(function(t){e.appointments=t.data},function(e){l.add(e.data.ExceptionMessage,"error")})},e.getDoctorAppointments=function(){var t={method:"GET",url:o.apiEndpoint+"/doctors/"+r.current.userId+"/appointments"};return i(t).then(function(t){e.eventSourceDoctor=d.filter(t.data,function(t){return t.title=t.Title,t.start=p(t.DateAndTime),t.end=p(t.DateAndTime).add(t.Duration,"minutes"),t.allDay=!1,e.addEventDoc(t),t})},function(e){l.add(e.data.ExceptionMessage,"error")})},e.getPatientAppointments=function(){var t={method:"GET",url:o.apiEndpoint+"/patients/"+r.current.userId+"/appointments"};return i(t).then(function(t){e.eventSourcePatient=d.filter(t.data,function(t){return t.title=t.Title,t.start=p(t.DateAndTime),t.end=p(t.DateAndTime).add(t.Duration,"minutes"),t.allDay=!1,e.addEventPat(t),t})},function(e){l.add(e.data.ExceptionMessage,"error")})},e.addEvent=function(t){e.calEventsExt.events.push(t)},e.addEventDoc=function(t){e.calEventsDoc.events.push(t)},e.addEventPat=function(t){e.calEventsPat.events.push(t)},e.calEventsExt={events:[]},e.calEventsDoc={events:[]},e.calEventsPat={events:[]},e.eventSources=[e.calEventsExt],e.eventSourceDoctor=[e.calEventsDoc],e.eventSourcePatient=[e.calEventsPat],e.openDoctorDetails=function(e){s.url("/profile/true/true/"+e.UserDetails.UserId)},e.openPatientDetails=function(e){s.url("/profile/true/false/"+e.UserDetails.UserId)},e.openAppointmentDoctor=function(e){s.url("/profile/true/true/"+e.DoctorUserId)},e.openAppointmentPatient=function(e){s.url("/profile/true/false/"+e.PatientUserId)},e.getDoctors(),e.getPatients(),e.getAppointments(),e.getDoctorAppointments(),e.getPatientAppointments(),e.getAppointments=function(){e.calEventsExt.events=[],e.newAppointment.doctorId=1;var t=o.apiEndpoint+"/doctors/"+e.newAppointment.doctorId+"/appointments",n={method:"GET",url:t};return i(n).then(function(t){e.eventSources3=d.filter(t.data,function(t){return t.title=t.Title,t.start=p(t.DateAndTime),t.end=p(t.DateAndTime).add(t.Duration,"minutes"),t.allDay=!1,e.addEvent(t),t})},function(e){l.add(e.data.ExceptionMessage,"error")})},e.alertOnEventClick=function(t){e.alertMessage=t.title+" was clicked "},e.changeView=function(e,t){a.calendars[t].fullCalendar("changeView",e)},e.renderCalendar=function(e){n(function(){a.calendars[e]&&a.calendars[e].fullCalendar("render")})},e.eventRender=function(n,a){a.attr({tooltip:n.title,"tooltip-append-to-body":!0}),t(a)(e)},e.uiConfig={calendar:{height:450,editable:!1,header:{left:"title",center:"",right:"today prev,next"},eventClick:e.alertOnEventClick,eventDrop:e.alertOnDrop,eventResize:e.alertOnResize,eventRender:e.eventRender}}}]),angular.module("appoints.logindetails",["appoints.api","appoints.config","appoints.usersession","appoints.flash","ngRoute"]).controller("LoginDetailsCtrl",["$scope","flash","$http","$window","$rootScope","$location","config","usersession",function(e,t,n,a,o,r,i,s){e.updatelogindetails=function(){var n={};n.userId=s.current.userId,n.oldPassword=e.oldPassword,n.newPassword=e.newPassword,s.updatelogindetails(n).then(function(e){e&&(s.returnTo?r.url(s.returnTo):r.url("/"))},function(e){t.add(e.data.ExceptionMessage,"error")})}}]),angular.module("appoints.profile",["appoints.config","appoints.usersession"]).controller("ProfileCtrl",["$scope","$rootScope","$timeout","config","usersession","$http","$location","flash","$routeParams",function(e,t,n,a,o,r,i,s,l){e.isreadonly="true"===l.isreadonly,e.dataLoading=!0,e.getProfileData=function(){var t=a.apiEndpoint;t=e.isreadonly?"true"===l.isdoctor?t+"/doctors/"+l.userid:t+"/patients/"+l.userid:o.current.isAdmin?t+"/admins/"+o.current.userId:o.current.isDoctor?t+"/doctors/"+o.current.userId:t+"/patients/"+o.current.userId;var n={method:"GET",url:t};return r(n).then(function(t){e.dataLoading=!1,e.profileData=t.data},function(e){s.add(e.data.ExceptionMessage,"error")})},e.goToLandingPage=function(){i.url("/dashboard")},e.getProfileData()}]),angular.module("appoints.signin",["appoints.api","appoints.config","appoints.usersession","appoints.flash","ngRoute"]).controller("UserSigninCtrl",["$scope","flash","$http","$window","$rootScope","$location","config","usersession",function(e,t,n,a,o,r,i,s){e.login=function(){var n={};n.username=e.username,n.userPassword=e.password,s.login(n).then(function(){s.current.isAuthenticated?s.returnTo?r.url(s.returnTo):r.url("/dashboard"):t.add("Invalid username or password.","error")})}}]),angular.module("appoints.authinterceptor",["appoints.usersession"]).factory("authInterceptor",["$rootScope","$q","$window","$location","$log","$injector",function(e,t,n,a,o,r){return{request:function(e){return e.headers=e.headers||{},n.localStorage.getItem("access_token")&&(e.headers.Authorization="Bearer "+n.localStorage.getItem("access_token")),e},response:function(e){return 401===e.status&&o.warn("Response 401"),e||t.when(e)},responseError:function(e){if(401===e.status){var n=r.get("usersession");o.info("Response Error 401",e),n.logout();var i=a.path();a.path("/login").search("returnTo",i)}return t.reject(e)}}}]).config(["$httpProvider",function(e){e.interceptors.push("authInterceptor")}]),angular.module("appoints",["ngRoute","ui.bootstrap.datetimepicker","appoints.directives","appoints.flash","appoints.usersession","appoints.authinterceptor","appoints.home","appoints.signin","appoints.logindetails","appoints.signup","appoints.dashboard","appoints.profile","appoints.createappointment","appoints.appointments","appoints-client-templates"]).constant("_",window._).constant("moment",window.moment).config(["$httpProvider",function(e){e.defaults.useXDomain=!0,delete e.defaults.headers.common["X-Requested-With"]}]).config(["$routeProvider",function(e){e.when("/",{templateUrl:"home/home.html",controller:"HomeCtrl",title:"Home"}).when("/appointments",{templateUrl:"appointments/appointments.html",controller:"AppointmentsCtrl",title:"Appointments"}).when("/usersignin",{templateUrl:"appointments/usersignin.html",controller:"UserSigninCtrl",title:"UserSignin"}).when("/usersignup",{templateUrl:"appointments/usersignup.html",controller:"UserSignupCtrl",title:"UserSignup"}).when("/logindetails",{templateUrl:"appointments/logindetails.html",controller:"LoginDetailsCtrl",title:"LoginDetails"}).when("/dashboard",{templateUrl:"appointments/dashboard.html",controller:"DashboardCtrl",title:"Dashboard"}).when("/createappointment",{templateUrl:"appointments/CreateAppointment.html",controller:"CreateAppointmentCtrl",title:"CreateAppointment"}).when("/profile/:isreadonly/:isdoctor/:userid",{templateUrl:"appointments/profile.html",controller:"ProfileCtrl",title:"Profile"})}]).controller("AppCtrl",["$scope","$location","usersession",function(e,t,n){var a="Appoints";e.pageTitle=a,e.$on("$routeChangeSuccess",function(t,n){e.pageTitle=angular.isUndefined?a:n.title||a}),e.user=n.current,e.routeIs=function(e){return t.path()===e},e.logout=function(){n.logout(),t.url("/")},e.$on("event:loggedin",function(t,a){e.user=a,n.current=a}),e.$on("event:loggedout",function(t,a){e.user=a,n.current=a})}]);